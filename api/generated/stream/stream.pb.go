// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: stream.proto

package stream

import (
	common "github.com/skshohagmiah/fluxdl/api/generated/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StreamMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Topic         string                 `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	PartitionKey  string                 `protobuf:"bytes,3,opt,name=partition_key,json=partitionKey,proto3" json:"partition_key,omitempty"`
	Data          []byte                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Offset        int64                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	Timestamp     int64                  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,7,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamMessage) Reset() {
	*x = StreamMessage{}
	mi := &file_stream_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMessage) ProtoMessage() {}

func (x *StreamMessage) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMessage.ProtoReflect.Descriptor instead.
func (*StreamMessage) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{0}
}

func (x *StreamMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StreamMessage) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *StreamMessage) GetPartitionKey() string {
	if x != nil {
		return x.PartitionKey
	}
	return ""
}

func (x *StreamMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *StreamMessage) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *StreamMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *StreamMessage) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

type TopicInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Partitions    int32                  `protobuf:"varint,2,opt,name=partitions,proto3" json:"partitions,omitempty"`
	TotalMessages int64                  `protobuf:"varint,3,opt,name=total_messages,json=totalMessages,proto3" json:"total_messages,omitempty"`
	PartitionInfo []*common.Partition    `protobuf:"bytes,4,rep,name=partition_info,json=partitionInfo,proto3" json:"partition_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopicInfo) Reset() {
	*x = TopicInfo{}
	mi := &file_stream_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicInfo) ProtoMessage() {}

func (x *TopicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicInfo.ProtoReflect.Descriptor instead.
func (*TopicInfo) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{1}
}

func (x *TopicInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TopicInfo) GetPartitions() int32 {
	if x != nil {
		return x.Partitions
	}
	return 0
}

func (x *TopicInfo) GetTotalMessages() int64 {
	if x != nil {
		return x.TotalMessages
	}
	return 0
}

func (x *TopicInfo) GetPartitionInfo() []*common.Partition {
	if x != nil {
		return x.PartitionInfo
	}
	return nil
}

type PublishRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	PartitionKey  string                 `protobuf:"bytes,3,opt,name=partition_key,json=partitionKey,proto3" json:"partition_key,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishRequest) Reset() {
	*x = PublishRequest{}
	mi := &file_stream_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishRequest) ProtoMessage() {}

func (x *PublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishRequest.ProtoReflect.Descriptor instead.
func (*PublishRequest) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{2}
}

func (x *PublishRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *PublishRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PublishRequest) GetPartitionKey() string {
	if x != nil {
		return x.PartitionKey
	}
	return ""
}

func (x *PublishRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

type PublishResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Offset        int64                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Partition     int32                  `protobuf:"varint,3,opt,name=partition,proto3" json:"partition,omitempty"`
	Status        *common.Status         `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishResponse) Reset() {
	*x = PublishResponse{}
	mi := &file_stream_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishResponse) ProtoMessage() {}

func (x *PublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishResponse.ProtoReflect.Descriptor instead.
func (*PublishResponse) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{3}
}

func (x *PublishResponse) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *PublishResponse) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *PublishResponse) GetPartition() int32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

func (x *PublishResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type SubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	ConsumerGroup string                 `protobuf:"bytes,2,opt,name=consumer_group,json=consumerGroup,proto3" json:"consumer_group,omitempty"`
	ConsumerId    string                 `protobuf:"bytes,3,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	FromOffset    int64                  `protobuf:"varint,4,opt,name=from_offset,json=fromOffset,proto3" json:"from_offset,omitempty"`
	FromBeginning bool                   `protobuf:"varint,5,opt,name=from_beginning,json=fromBeginning,proto3" json:"from_beginning,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_stream_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{4}
}

func (x *SubscribeRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *SubscribeRequest) GetConsumerGroup() string {
	if x != nil {
		return x.ConsumerGroup
	}
	return ""
}

func (x *SubscribeRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *SubscribeRequest) GetFromOffset() int64 {
	if x != nil {
		return x.FromOffset
	}
	return 0
}

func (x *SubscribeRequest) GetFromBeginning() bool {
	if x != nil {
		return x.FromBeginning
	}
	return false
}

type SubscribeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *StreamMessage         `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        *common.Status         `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeResponse) Reset() {
	*x = SubscribeResponse{}
	mi := &file_stream_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeResponse) ProtoMessage() {}

func (x *SubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeResponse.ProtoReflect.Descriptor instead.
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{5}
}

func (x *SubscribeResponse) GetMessage() *StreamMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *SubscribeResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type ReadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	FromOffset    int64                  `protobuf:"varint,2,opt,name=from_offset,json=fromOffset,proto3" json:"from_offset,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Partition     int32                  `protobuf:"varint,4,opt,name=partition,proto3" json:"partition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadRequest) Reset() {
	*x = ReadRequest{}
	mi := &file_stream_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest) ProtoMessage() {}

func (x *ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequest.ProtoReflect.Descriptor instead.
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{6}
}

func (x *ReadRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *ReadRequest) GetFromOffset() int64 {
	if x != nil {
		return x.FromOffset
	}
	return 0
}

func (x *ReadRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ReadRequest) GetPartition() int32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

type ReadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*StreamMessage       `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	NextOffset    int64                  `protobuf:"varint,2,opt,name=next_offset,json=nextOffset,proto3" json:"next_offset,omitempty"`
	Status        *common.Status         `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadResponse) Reset() {
	*x = ReadResponse{}
	mi := &file_stream_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResponse) ProtoMessage() {}

func (x *ReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResponse.ProtoReflect.Descriptor instead.
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{7}
}

func (x *ReadResponse) GetMessages() []*StreamMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *ReadResponse) GetNextOffset() int64 {
	if x != nil {
		return x.NextOffset
	}
	return 0
}

func (x *ReadResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type SeekRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	ConsumerId    string                 `protobuf:"bytes,2,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	Offset        int64                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Partition     int32                  `protobuf:"varint,4,opt,name=partition,proto3" json:"partition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SeekRequest) Reset() {
	*x = SeekRequest{}
	mi := &file_stream_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeekRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekRequest) ProtoMessage() {}

func (x *SeekRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekRequest.ProtoReflect.Descriptor instead.
func (*SeekRequest) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{8}
}

func (x *SeekRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *SeekRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *SeekRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SeekRequest) GetPartition() int32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

type SeekResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *common.Status         `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SeekResponse) Reset() {
	*x = SeekResponse{}
	mi := &file_stream_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeekResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekResponse) ProtoMessage() {}

func (x *SeekResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekResponse.ProtoReflect.Descriptor instead.
func (*SeekResponse) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{9}
}

func (x *SeekResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type GetOffsetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	ConsumerId    string                 `protobuf:"bytes,2,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	Partition     int32                  `protobuf:"varint,3,opt,name=partition,proto3" json:"partition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOffsetRequest) Reset() {
	*x = GetOffsetRequest{}
	mi := &file_stream_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOffsetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOffsetRequest) ProtoMessage() {}

func (x *GetOffsetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOffsetRequest.ProtoReflect.Descriptor instead.
func (*GetOffsetRequest) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{10}
}

func (x *GetOffsetRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *GetOffsetRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *GetOffsetRequest) GetPartition() int32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

type GetOffsetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Offset        int64                  `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Status        *common.Status         `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOffsetResponse) Reset() {
	*x = GetOffsetResponse{}
	mi := &file_stream_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOffsetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOffsetResponse) ProtoMessage() {}

func (x *GetOffsetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOffsetResponse.ProtoReflect.Descriptor instead.
func (*GetOffsetResponse) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{11}
}

func (x *GetOffsetResponse) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetOffsetResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type CreateTopicRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Name              string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Partitions        int32                  `protobuf:"varint,2,opt,name=partitions,proto3" json:"partitions,omitempty"`
	ReplicationFactor int32                  `protobuf:"varint,3,opt,name=replication_factor,json=replicationFactor,proto3" json:"replication_factor,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CreateTopicRequest) Reset() {
	*x = CreateTopicRequest{}
	mi := &file_stream_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTopicRequest) ProtoMessage() {}

func (x *CreateTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTopicRequest.ProtoReflect.Descriptor instead.
func (*CreateTopicRequest) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{12}
}

func (x *CreateTopicRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTopicRequest) GetPartitions() int32 {
	if x != nil {
		return x.Partitions
	}
	return 0
}

func (x *CreateTopicRequest) GetReplicationFactor() int32 {
	if x != nil {
		return x.ReplicationFactor
	}
	return 0
}

type CreateTopicResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *common.Status         `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTopicResponse) Reset() {
	*x = CreateTopicResponse{}
	mi := &file_stream_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTopicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTopicResponse) ProtoMessage() {}

func (x *CreateTopicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTopicResponse.ProtoReflect.Descriptor instead.
func (*CreateTopicResponse) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{13}
}

func (x *CreateTopicResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type DeleteTopicRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTopicRequest) Reset() {
	*x = DeleteTopicRequest{}
	mi := &file_stream_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTopicRequest) ProtoMessage() {}

func (x *DeleteTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTopicRequest.ProtoReflect.Descriptor instead.
func (*DeleteTopicRequest) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteTopicRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteTopicResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *common.Status         `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTopicResponse) Reset() {
	*x = DeleteTopicResponse{}
	mi := &file_stream_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTopicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTopicResponse) ProtoMessage() {}

func (x *DeleteTopicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTopicResponse.ProtoReflect.Descriptor instead.
func (*DeleteTopicResponse) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteTopicResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type ListTopicsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTopicsRequest) Reset() {
	*x = ListTopicsRequest{}
	mi := &file_stream_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTopicsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTopicsRequest) ProtoMessage() {}

func (x *ListTopicsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTopicsRequest.ProtoReflect.Descriptor instead.
func (*ListTopicsRequest) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{16}
}

type ListTopicsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topics        []string               `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	Status        *common.Status         `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTopicsResponse) Reset() {
	*x = ListTopicsResponse{}
	mi := &file_stream_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTopicsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTopicsResponse) ProtoMessage() {}

func (x *ListTopicsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTopicsResponse.ProtoReflect.Descriptor instead.
func (*ListTopicsResponse) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{17}
}

func (x *ListTopicsResponse) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *ListTopicsResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type GetTopicInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTopicInfoRequest) Reset() {
	*x = GetTopicInfoRequest{}
	mi := &file_stream_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTopicInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicInfoRequest) ProtoMessage() {}

func (x *GetTopicInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopicInfoRequest.ProtoReflect.Descriptor instead.
func (*GetTopicInfoRequest) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{18}
}

func (x *GetTopicInfoRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

type GetTopicInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *TopicInfo             `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Status        *common.Status         `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTopicInfoResponse) Reset() {
	*x = GetTopicInfoResponse{}
	mi := &file_stream_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTopicInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicInfoResponse) ProtoMessage() {}

func (x *GetTopicInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopicInfoResponse.ProtoReflect.Descriptor instead.
func (*GetTopicInfoResponse) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{19}
}

func (x *GetTopicInfoResponse) GetInfo() *TopicInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *GetTopicInfoResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type ReadFromRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Partition     int32                  `protobuf:"varint,2,opt,name=partition,proto3" json:"partition,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadFromRequest) Reset() {
	*x = ReadFromRequest{}
	mi := &file_stream_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadFromRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFromRequest) ProtoMessage() {}

func (x *ReadFromRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFromRequest.ProtoReflect.Descriptor instead.
func (*ReadFromRequest) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{20}
}

func (x *ReadFromRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *ReadFromRequest) GetPartition() int32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

func (x *ReadFromRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ReadFromRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ReadFromResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*StreamMessage       `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	NextOffset    int64                  `protobuf:"varint,2,opt,name=next_offset,json=nextOffset,proto3" json:"next_offset,omitempty"`
	Status        *common.Status         `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadFromResponse) Reset() {
	*x = ReadFromResponse{}
	mi := &file_stream_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadFromResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFromResponse) ProtoMessage() {}

func (x *ReadFromResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFromResponse.ProtoReflect.Descriptor instead.
func (*ReadFromResponse) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{21}
}

func (x *ReadFromResponse) GetMessages() []*StreamMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *ReadFromResponse) GetNextOffset() int64 {
	if x != nil {
		return x.NextOffset
	}
	return 0
}

func (x *ReadFromResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type PurgeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PurgeRequest) Reset() {
	*x = PurgeRequest{}
	mi := &file_stream_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgeRequest) ProtoMessage() {}

func (x *PurgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgeRequest.ProtoReflect.Descriptor instead.
func (*PurgeRequest) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{22}
}

func (x *PurgeRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

type PurgeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PurgedCount   int64                  `protobuf:"varint,1,opt,name=purged_count,json=purgedCount,proto3" json:"purged_count,omitempty"`
	Status        *common.Status         `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PurgeResponse) Reset() {
	*x = PurgeResponse{}
	mi := &file_stream_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgeResponse) ProtoMessage() {}

func (x *PurgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgeResponse.ProtoReflect.Descriptor instead.
func (*PurgeResponse) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{23}
}

func (x *PurgeResponse) GetPurgedCount() int64 {
	if x != nil {
		return x.PurgedCount
	}
	return 0
}

func (x *PurgeResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type SubscribeGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	GroupId       string                 `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	ConsumerId    string                 `protobuf:"bytes,3,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeGroupRequest) Reset() {
	*x = SubscribeGroupRequest{}
	mi := &file_stream_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeGroupRequest) ProtoMessage() {}

func (x *SubscribeGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeGroupRequest.ProtoReflect.Descriptor instead.
func (*SubscribeGroupRequest) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{24}
}

func (x *SubscribeGroupRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *SubscribeGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SubscribeGroupRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

type CommitGroupOffsetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	GroupId       string                 `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Partition     int32                  `protobuf:"varint,3,opt,name=partition,proto3" json:"partition,omitempty"`
	Offset        int64                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitGroupOffsetRequest) Reset() {
	*x = CommitGroupOffsetRequest{}
	mi := &file_stream_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitGroupOffsetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitGroupOffsetRequest) ProtoMessage() {}

func (x *CommitGroupOffsetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitGroupOffsetRequest.ProtoReflect.Descriptor instead.
func (*CommitGroupOffsetRequest) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{25}
}

func (x *CommitGroupOffsetRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *CommitGroupOffsetRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *CommitGroupOffsetRequest) GetPartition() int32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

func (x *CommitGroupOffsetRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type CommitGroupOffsetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *common.Status         `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitGroupOffsetResponse) Reset() {
	*x = CommitGroupOffsetResponse{}
	mi := &file_stream_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitGroupOffsetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitGroupOffsetResponse) ProtoMessage() {}

func (x *CommitGroupOffsetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitGroupOffsetResponse.ProtoReflect.Descriptor instead.
func (*CommitGroupOffsetResponse) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{26}
}

func (x *CommitGroupOffsetResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type GetGroupOffsetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	GroupId       string                 `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Partition     int32                  `protobuf:"varint,3,opt,name=partition,proto3" json:"partition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGroupOffsetRequest) Reset() {
	*x = GetGroupOffsetRequest{}
	mi := &file_stream_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGroupOffsetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupOffsetRequest) ProtoMessage() {}

func (x *GetGroupOffsetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupOffsetRequest.ProtoReflect.Descriptor instead.
func (*GetGroupOffsetRequest) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{27}
}

func (x *GetGroupOffsetRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *GetGroupOffsetRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetGroupOffsetRequest) GetPartition() int32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

type GetGroupOffsetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Offset        int64                  `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Status        *common.Status         `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGroupOffsetResponse) Reset() {
	*x = GetGroupOffsetResponse{}
	mi := &file_stream_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGroupOffsetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupOffsetResponse) ProtoMessage() {}

func (x *GetGroupOffsetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupOffsetResponse.ProtoReflect.Descriptor instead.
func (*GetGroupOffsetResponse) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{28}
}

func (x *GetGroupOffsetResponse) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetGroupOffsetResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_stream_proto protoreflect.FileDescriptor

const file_stream_proto_rawDesc = "" +
	"\n" +
	"\fstream.proto\x12\rfluxdl.stream\x1a\fcommon.proto\"\xa5\x02\n" +
	"\rStreamMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05topic\x18\x02 \x01(\tR\x05topic\x12#\n" +
	"\rpartition_key\x18\x03 \x01(\tR\fpartitionKey\x12\x12\n" +
	"\x04data\x18\x04 \x01(\fR\x04data\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x03R\x06offset\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\x03R\ttimestamp\x12C\n" +
	"\aheaders\x18\a \x03(\v2).fluxdl.stream.StreamMessage.HeadersEntryR\aheaders\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa7\x01\n" +
	"\tTopicInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1e\n" +
	"\n" +
	"partitions\x18\x02 \x01(\x05R\n" +
	"partitions\x12%\n" +
	"\x0etotal_messages\x18\x03 \x01(\x03R\rtotalMessages\x12?\n" +
	"\x0epartition_info\x18\x04 \x03(\v2\x18.fluxdl.common.PartitionR\rpartitionInfo\"\xe1\x01\n" +
	"\x0ePublishRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12#\n" +
	"\rpartition_key\x18\x03 \x01(\tR\fpartitionKey\x12D\n" +
	"\aheaders\x18\x04 \x03(\v2*.fluxdl.stream.PublishRequest.HeadersEntryR\aheaders\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x95\x01\n" +
	"\x0fPublishResponse\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x03R\x06offset\x12\x1c\n" +
	"\tpartition\x18\x03 \x01(\x05R\tpartition\x12-\n" +
	"\x06status\x18\x04 \x01(\v2\x15.fluxdl.common.StatusR\x06status\"\xb8\x01\n" +
	"\x10SubscribeRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12%\n" +
	"\x0econsumer_group\x18\x02 \x01(\tR\rconsumerGroup\x12\x1f\n" +
	"\vconsumer_id\x18\x03 \x01(\tR\n" +
	"consumerId\x12\x1f\n" +
	"\vfrom_offset\x18\x04 \x01(\x03R\n" +
	"fromOffset\x12%\n" +
	"\x0efrom_beginning\x18\x05 \x01(\bR\rfromBeginning\"z\n" +
	"\x11SubscribeResponse\x126\n" +
	"\amessage\x18\x01 \x01(\v2\x1c.fluxdl.stream.StreamMessageR\amessage\x12-\n" +
	"\x06status\x18\x02 \x01(\v2\x15.fluxdl.common.StatusR\x06status\"x\n" +
	"\vReadRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\x1f\n" +
	"\vfrom_offset\x18\x02 \x01(\x03R\n" +
	"fromOffset\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x1c\n" +
	"\tpartition\x18\x04 \x01(\x05R\tpartition\"\x98\x01\n" +
	"\fReadResponse\x128\n" +
	"\bmessages\x18\x01 \x03(\v2\x1c.fluxdl.stream.StreamMessageR\bmessages\x12\x1f\n" +
	"\vnext_offset\x18\x02 \x01(\x03R\n" +
	"nextOffset\x12-\n" +
	"\x06status\x18\x03 \x01(\v2\x15.fluxdl.common.StatusR\x06status\"z\n" +
	"\vSeekRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\x1f\n" +
	"\vconsumer_id\x18\x02 \x01(\tR\n" +
	"consumerId\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x03R\x06offset\x12\x1c\n" +
	"\tpartition\x18\x04 \x01(\x05R\tpartition\"=\n" +
	"\fSeekResponse\x12-\n" +
	"\x06status\x18\x01 \x01(\v2\x15.fluxdl.common.StatusR\x06status\"g\n" +
	"\x10GetOffsetRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\x1f\n" +
	"\vconsumer_id\x18\x02 \x01(\tR\n" +
	"consumerId\x12\x1c\n" +
	"\tpartition\x18\x03 \x01(\x05R\tpartition\"Z\n" +
	"\x11GetOffsetResponse\x12\x16\n" +
	"\x06offset\x18\x01 \x01(\x03R\x06offset\x12-\n" +
	"\x06status\x18\x02 \x01(\v2\x15.fluxdl.common.StatusR\x06status\"w\n" +
	"\x12CreateTopicRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1e\n" +
	"\n" +
	"partitions\x18\x02 \x01(\x05R\n" +
	"partitions\x12-\n" +
	"\x12replication_factor\x18\x03 \x01(\x05R\x11replicationFactor\"D\n" +
	"\x13CreateTopicResponse\x12-\n" +
	"\x06status\x18\x01 \x01(\v2\x15.fluxdl.common.StatusR\x06status\"(\n" +
	"\x12DeleteTopicRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"D\n" +
	"\x13DeleteTopicResponse\x12-\n" +
	"\x06status\x18\x01 \x01(\v2\x15.fluxdl.common.StatusR\x06status\"\x13\n" +
	"\x11ListTopicsRequest\"[\n" +
	"\x12ListTopicsResponse\x12\x16\n" +
	"\x06topics\x18\x01 \x03(\tR\x06topics\x12-\n" +
	"\x06status\x18\x02 \x01(\v2\x15.fluxdl.common.StatusR\x06status\"+\n" +
	"\x13GetTopicInfoRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\"s\n" +
	"\x14GetTopicInfoResponse\x12,\n" +
	"\x04info\x18\x01 \x01(\v2\x18.fluxdl.stream.TopicInfoR\x04info\x12-\n" +
	"\x06status\x18\x02 \x01(\v2\x15.fluxdl.common.StatusR\x06status\"y\n" +
	"\x0fReadFromRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\x1c\n" +
	"\tpartition\x18\x02 \x01(\x05R\tpartition\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\"\x9c\x01\n" +
	"\x10ReadFromResponse\x128\n" +
	"\bmessages\x18\x01 \x03(\v2\x1c.fluxdl.stream.StreamMessageR\bmessages\x12\x1f\n" +
	"\vnext_offset\x18\x02 \x01(\x03R\n" +
	"nextOffset\x12-\n" +
	"\x06status\x18\x03 \x01(\v2\x15.fluxdl.common.StatusR\x06status\"$\n" +
	"\fPurgeRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\"a\n" +
	"\rPurgeResponse\x12!\n" +
	"\fpurged_count\x18\x01 \x01(\x03R\vpurgedCount\x12-\n" +
	"\x06status\x18\x02 \x01(\v2\x15.fluxdl.common.StatusR\x06status\"i\n" +
	"\x15SubscribeGroupRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\tR\agroupId\x12\x1f\n" +
	"\vconsumer_id\x18\x03 \x01(\tR\n" +
	"consumerId\"\x81\x01\n" +
	"\x18CommitGroupOffsetRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\tR\agroupId\x12\x1c\n" +
	"\tpartition\x18\x03 \x01(\x05R\tpartition\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x03R\x06offset\"J\n" +
	"\x19CommitGroupOffsetResponse\x12-\n" +
	"\x06status\x18\x01 \x01(\v2\x15.fluxdl.common.StatusR\x06status\"f\n" +
	"\x15GetGroupOffsetRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\tR\agroupId\x12\x1c\n" +
	"\tpartition\x18\x03 \x01(\x05R\tpartition\"_\n" +
	"\x16GetGroupOffsetResponse\x12\x16\n" +
	"\x06offset\x18\x01 \x01(\x03R\x06offset\x12-\n" +
	"\x06status\x18\x02 \x01(\v2\x15.fluxdl.common.StatusR\x06status2\x89\t\n" +
	"\rStreamService\x12H\n" +
	"\aPublish\x12\x1d.fluxdl.stream.PublishRequest\x1a\x1e.fluxdl.stream.PublishResponse\x12P\n" +
	"\tSubscribe\x12\x1f.fluxdl.stream.SubscribeRequest\x1a .fluxdl.stream.SubscribeResponse0\x01\x12Z\n" +
	"\x0eSubscribeGroup\x12$.fluxdl.stream.SubscribeGroupRequest\x1a .fluxdl.stream.SubscribeResponse0\x01\x12?\n" +
	"\x04Read\x12\x1a.fluxdl.stream.ReadRequest\x1a\x1b.fluxdl.stream.ReadResponse\x12K\n" +
	"\bReadFrom\x12\x1e.fluxdl.stream.ReadFromRequest\x1a\x1f.fluxdl.stream.ReadFromResponse\x12?\n" +
	"\x04Seek\x12\x1a.fluxdl.stream.SeekRequest\x1a\x1b.fluxdl.stream.SeekResponse\x12N\n" +
	"\tGetOffset\x12\x1f.fluxdl.stream.GetOffsetRequest\x1a .fluxdl.stream.GetOffsetResponse\x12f\n" +
	"\x11CommitGroupOffset\x12'.fluxdl.stream.CommitGroupOffsetRequest\x1a(.fluxdl.stream.CommitGroupOffsetResponse\x12]\n" +
	"\x0eGetGroupOffset\x12$.fluxdl.stream.GetGroupOffsetRequest\x1a%.fluxdl.stream.GetGroupOffsetResponse\x12T\n" +
	"\vCreateTopic\x12!.fluxdl.stream.CreateTopicRequest\x1a\".fluxdl.stream.CreateTopicResponse\x12T\n" +
	"\vDeleteTopic\x12!.fluxdl.stream.DeleteTopicRequest\x1a\".fluxdl.stream.DeleteTopicResponse\x12Q\n" +
	"\n" +
	"ListTopics\x12 .fluxdl.stream.ListTopicsRequest\x1a!.fluxdl.stream.ListTopicsResponse\x12W\n" +
	"\fGetTopicInfo\x12\".fluxdl.stream.GetTopicInfoRequest\x1a#.fluxdl.stream.GetTopicInfoResponse\x12B\n" +
	"\x05Purge\x12\x1b.fluxdl.stream.PurgeRequest\x1a\x1c.fluxdl.stream.PurgeResponseB5Z3github.com/skshohagmiah/fluxdl/api/generated/streamb\x06proto3"

var (
	file_stream_proto_rawDescOnce sync.Once
	file_stream_proto_rawDescData []byte
)

func file_stream_proto_rawDescGZIP() []byte {
	file_stream_proto_rawDescOnce.Do(func() {
		file_stream_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_stream_proto_rawDesc), len(file_stream_proto_rawDesc)))
	})
	return file_stream_proto_rawDescData
}

var file_stream_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_stream_proto_goTypes = []any{
	(*StreamMessage)(nil),             // 0: fluxdl.stream.StreamMessage
	(*TopicInfo)(nil),                 // 1: fluxdl.stream.TopicInfo
	(*PublishRequest)(nil),            // 2: fluxdl.stream.PublishRequest
	(*PublishResponse)(nil),           // 3: fluxdl.stream.PublishResponse
	(*SubscribeRequest)(nil),          // 4: fluxdl.stream.SubscribeRequest
	(*SubscribeResponse)(nil),         // 5: fluxdl.stream.SubscribeResponse
	(*ReadRequest)(nil),               // 6: fluxdl.stream.ReadRequest
	(*ReadResponse)(nil),              // 7: fluxdl.stream.ReadResponse
	(*SeekRequest)(nil),               // 8: fluxdl.stream.SeekRequest
	(*SeekResponse)(nil),              // 9: fluxdl.stream.SeekResponse
	(*GetOffsetRequest)(nil),          // 10: fluxdl.stream.GetOffsetRequest
	(*GetOffsetResponse)(nil),         // 11: fluxdl.stream.GetOffsetResponse
	(*CreateTopicRequest)(nil),        // 12: fluxdl.stream.CreateTopicRequest
	(*CreateTopicResponse)(nil),       // 13: fluxdl.stream.CreateTopicResponse
	(*DeleteTopicRequest)(nil),        // 14: fluxdl.stream.DeleteTopicRequest
	(*DeleteTopicResponse)(nil),       // 15: fluxdl.stream.DeleteTopicResponse
	(*ListTopicsRequest)(nil),         // 16: fluxdl.stream.ListTopicsRequest
	(*ListTopicsResponse)(nil),        // 17: fluxdl.stream.ListTopicsResponse
	(*GetTopicInfoRequest)(nil),       // 18: fluxdl.stream.GetTopicInfoRequest
	(*GetTopicInfoResponse)(nil),      // 19: fluxdl.stream.GetTopicInfoResponse
	(*ReadFromRequest)(nil),           // 20: fluxdl.stream.ReadFromRequest
	(*ReadFromResponse)(nil),          // 21: fluxdl.stream.ReadFromResponse
	(*PurgeRequest)(nil),              // 22: fluxdl.stream.PurgeRequest
	(*PurgeResponse)(nil),             // 23: fluxdl.stream.PurgeResponse
	(*SubscribeGroupRequest)(nil),     // 24: fluxdl.stream.SubscribeGroupRequest
	(*CommitGroupOffsetRequest)(nil),  // 25: fluxdl.stream.CommitGroupOffsetRequest
	(*CommitGroupOffsetResponse)(nil), // 26: fluxdl.stream.CommitGroupOffsetResponse
	(*GetGroupOffsetRequest)(nil),     // 27: fluxdl.stream.GetGroupOffsetRequest
	(*GetGroupOffsetResponse)(nil),    // 28: fluxdl.stream.GetGroupOffsetResponse
	nil,                               // 29: fluxdl.stream.StreamMessage.HeadersEntry
	nil,                               // 30: fluxdl.stream.PublishRequest.HeadersEntry
	(*common.Partition)(nil),          // 31: fluxdl.common.Partition
	(*common.Status)(nil),             // 32: fluxdl.common.Status
}
var file_stream_proto_depIdxs = []int32{
	29, // 0: fluxdl.stream.StreamMessage.headers:type_name -> fluxdl.stream.StreamMessage.HeadersEntry
	31, // 1: fluxdl.stream.TopicInfo.partition_info:type_name -> fluxdl.common.Partition
	30, // 2: fluxdl.stream.PublishRequest.headers:type_name -> fluxdl.stream.PublishRequest.HeadersEntry
	32, // 3: fluxdl.stream.PublishResponse.status:type_name -> fluxdl.common.Status
	0,  // 4: fluxdl.stream.SubscribeResponse.message:type_name -> fluxdl.stream.StreamMessage
	32, // 5: fluxdl.stream.SubscribeResponse.status:type_name -> fluxdl.common.Status
	0,  // 6: fluxdl.stream.ReadResponse.messages:type_name -> fluxdl.stream.StreamMessage
	32, // 7: fluxdl.stream.ReadResponse.status:type_name -> fluxdl.common.Status
	32, // 8: fluxdl.stream.SeekResponse.status:type_name -> fluxdl.common.Status
	32, // 9: fluxdl.stream.GetOffsetResponse.status:type_name -> fluxdl.common.Status
	32, // 10: fluxdl.stream.CreateTopicResponse.status:type_name -> fluxdl.common.Status
	32, // 11: fluxdl.stream.DeleteTopicResponse.status:type_name -> fluxdl.common.Status
	32, // 12: fluxdl.stream.ListTopicsResponse.status:type_name -> fluxdl.common.Status
	1,  // 13: fluxdl.stream.GetTopicInfoResponse.info:type_name -> fluxdl.stream.TopicInfo
	32, // 14: fluxdl.stream.GetTopicInfoResponse.status:type_name -> fluxdl.common.Status
	0,  // 15: fluxdl.stream.ReadFromResponse.messages:type_name -> fluxdl.stream.StreamMessage
	32, // 16: fluxdl.stream.ReadFromResponse.status:type_name -> fluxdl.common.Status
	32, // 17: fluxdl.stream.PurgeResponse.status:type_name -> fluxdl.common.Status
	32, // 18: fluxdl.stream.CommitGroupOffsetResponse.status:type_name -> fluxdl.common.Status
	32, // 19: fluxdl.stream.GetGroupOffsetResponse.status:type_name -> fluxdl.common.Status
	2,  // 20: fluxdl.stream.StreamService.Publish:input_type -> fluxdl.stream.PublishRequest
	4,  // 21: fluxdl.stream.StreamService.Subscribe:input_type -> fluxdl.stream.SubscribeRequest
	24, // 22: fluxdl.stream.StreamService.SubscribeGroup:input_type -> fluxdl.stream.SubscribeGroupRequest
	6,  // 23: fluxdl.stream.StreamService.Read:input_type -> fluxdl.stream.ReadRequest
	20, // 24: fluxdl.stream.StreamService.ReadFrom:input_type -> fluxdl.stream.ReadFromRequest
	8,  // 25: fluxdl.stream.StreamService.Seek:input_type -> fluxdl.stream.SeekRequest
	10, // 26: fluxdl.stream.StreamService.GetOffset:input_type -> fluxdl.stream.GetOffsetRequest
	25, // 27: fluxdl.stream.StreamService.CommitGroupOffset:input_type -> fluxdl.stream.CommitGroupOffsetRequest
	27, // 28: fluxdl.stream.StreamService.GetGroupOffset:input_type -> fluxdl.stream.GetGroupOffsetRequest
	12, // 29: fluxdl.stream.StreamService.CreateTopic:input_type -> fluxdl.stream.CreateTopicRequest
	14, // 30: fluxdl.stream.StreamService.DeleteTopic:input_type -> fluxdl.stream.DeleteTopicRequest
	16, // 31: fluxdl.stream.StreamService.ListTopics:input_type -> fluxdl.stream.ListTopicsRequest
	18, // 32: fluxdl.stream.StreamService.GetTopicInfo:input_type -> fluxdl.stream.GetTopicInfoRequest
	22, // 33: fluxdl.stream.StreamService.Purge:input_type -> fluxdl.stream.PurgeRequest
	3,  // 34: fluxdl.stream.StreamService.Publish:output_type -> fluxdl.stream.PublishResponse
	5,  // 35: fluxdl.stream.StreamService.Subscribe:output_type -> fluxdl.stream.SubscribeResponse
	5,  // 36: fluxdl.stream.StreamService.SubscribeGroup:output_type -> fluxdl.stream.SubscribeResponse
	7,  // 37: fluxdl.stream.StreamService.Read:output_type -> fluxdl.stream.ReadResponse
	21, // 38: fluxdl.stream.StreamService.ReadFrom:output_type -> fluxdl.stream.ReadFromResponse
	9,  // 39: fluxdl.stream.StreamService.Seek:output_type -> fluxdl.stream.SeekResponse
	11, // 40: fluxdl.stream.StreamService.GetOffset:output_type -> fluxdl.stream.GetOffsetResponse
	26, // 41: fluxdl.stream.StreamService.CommitGroupOffset:output_type -> fluxdl.stream.CommitGroupOffsetResponse
	28, // 42: fluxdl.stream.StreamService.GetGroupOffset:output_type -> fluxdl.stream.GetGroupOffsetResponse
	13, // 43: fluxdl.stream.StreamService.CreateTopic:output_type -> fluxdl.stream.CreateTopicResponse
	15, // 44: fluxdl.stream.StreamService.DeleteTopic:output_type -> fluxdl.stream.DeleteTopicResponse
	17, // 45: fluxdl.stream.StreamService.ListTopics:output_type -> fluxdl.stream.ListTopicsResponse
	19, // 46: fluxdl.stream.StreamService.GetTopicInfo:output_type -> fluxdl.stream.GetTopicInfoResponse
	23, // 47: fluxdl.stream.StreamService.Purge:output_type -> fluxdl.stream.PurgeResponse
	34, // [34:48] is the sub-list for method output_type
	20, // [20:34] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_stream_proto_init() }
func file_stream_proto_init() {
	if File_stream_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_stream_proto_rawDesc), len(file_stream_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stream_proto_goTypes,
		DependencyIndexes: file_stream_proto_depIdxs,
		MessageInfos:      file_stream_proto_msgTypes,
	}.Build()
	File_stream_proto = out.File
	file_stream_proto_goTypes = nil
	file_stream_proto_depIdxs = nil
}
