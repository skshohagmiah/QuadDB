// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: queue.proto

package queue

import (
	common "github.com/skshohagmiah/fluxdl/api/generated/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueueMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Queue         string                 `protobuf:"bytes,2,opt,name=queue,proto3" json:"queue,omitempty"`
	Data          []byte                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	DelayUntil    int64                  `protobuf:"varint,5,opt,name=delay_until,json=delayUntil,proto3" json:"delay_until,omitempty"`
	RetryCount    int32                  `protobuf:"varint,6,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`
	ConsumerId    string                 `protobuf:"bytes,7,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueueMessage) Reset() {
	*x = QueueMessage{}
	mi := &file_queue_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueMessage) ProtoMessage() {}

func (x *QueueMessage) ProtoReflect() protoreflect.Message {
	mi := &file_queue_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueMessage.ProtoReflect.Descriptor instead.
func (*QueueMessage) Descriptor() ([]byte, []int) {
	return file_queue_proto_rawDescGZIP(), []int{0}
}

func (x *QueueMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QueueMessage) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *QueueMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueueMessage) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *QueueMessage) GetDelayUntil() int64 {
	if x != nil {
		return x.DelayUntil
	}
	return 0
}

func (x *QueueMessage) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *QueueMessage) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

type QueueStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Consumers     int64                  `protobuf:"varint,3,opt,name=consumers,proto3" json:"consumers,omitempty"`
	Pending       int64                  `protobuf:"varint,4,opt,name=pending,proto3" json:"pending,omitempty"`
	Processed     int64                  `protobuf:"varint,5,opt,name=processed,proto3" json:"processed,omitempty"`
	Failed        int64                  `protobuf:"varint,6,opt,name=failed,proto3" json:"failed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueueStats) Reset() {
	*x = QueueStats{}
	mi := &file_queue_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueStats) ProtoMessage() {}

func (x *QueueStats) ProtoReflect() protoreflect.Message {
	mi := &file_queue_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueStats.ProtoReflect.Descriptor instead.
func (*QueueStats) Descriptor() ([]byte, []int) {
	return file_queue_proto_rawDescGZIP(), []int{1}
}

func (x *QueueStats) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueueStats) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *QueueStats) GetConsumers() int64 {
	if x != nil {
		return x.Consumers
	}
	return 0
}

func (x *QueueStats) GetPending() int64 {
	if x != nil {
		return x.Pending
	}
	return 0
}

func (x *QueueStats) GetProcessed() int64 {
	if x != nil {
		return x.Processed
	}
	return 0
}

func (x *QueueStats) GetFailed() int64 {
	if x != nil {
		return x.Failed
	}
	return 0
}

type PushRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Queue         string                 `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Delay         int64                  `protobuf:"varint,3,opt,name=delay,proto3" json:"delay,omitempty"`
	Priority      int32                  `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PushRequest) Reset() {
	*x = PushRequest{}
	mi := &file_queue_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushRequest) ProtoMessage() {}

func (x *PushRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushRequest.ProtoReflect.Descriptor instead.
func (*PushRequest) Descriptor() ([]byte, []int) {
	return file_queue_proto_rawDescGZIP(), []int{2}
}

func (x *PushRequest) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *PushRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PushRequest) GetDelay() int64 {
	if x != nil {
		return x.Delay
	}
	return 0
}

func (x *PushRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type PushResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Status        *common.Status         `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PushResponse) Reset() {
	*x = PushResponse{}
	mi := &file_queue_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushResponse) ProtoMessage() {}

func (x *PushResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushResponse.ProtoReflect.Descriptor instead.
func (*PushResponse) Descriptor() ([]byte, []int) {
	return file_queue_proto_rawDescGZIP(), []int{3}
}

func (x *PushResponse) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *PushResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type PopRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Queue         string                 `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	Timeout       int32                  `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	ConsumerId    string                 `protobuf:"bytes,3,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PopRequest) Reset() {
	*x = PopRequest{}
	mi := &file_queue_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PopRequest) ProtoMessage() {}

func (x *PopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PopRequest.ProtoReflect.Descriptor instead.
func (*PopRequest) Descriptor() ([]byte, []int) {
	return file_queue_proto_rawDescGZIP(), []int{4}
}

func (x *PopRequest) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *PopRequest) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *PopRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

type PopResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *QueueMessage          `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        *common.Status         `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PopResponse) Reset() {
	*x = PopResponse{}
	mi := &file_queue_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PopResponse) ProtoMessage() {}

func (x *PopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PopResponse.ProtoReflect.Descriptor instead.
func (*PopResponse) Descriptor() ([]byte, []int) {
	return file_queue_proto_rawDescGZIP(), []int{5}
}

func (x *PopResponse) GetMessage() *QueueMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *PopResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type PeekRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Queue         string                 `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeekRequest) Reset() {
	*x = PeekRequest{}
	mi := &file_queue_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeekRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeekRequest) ProtoMessage() {}

func (x *PeekRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeekRequest.ProtoReflect.Descriptor instead.
func (*PeekRequest) Descriptor() ([]byte, []int) {
	return file_queue_proto_rawDescGZIP(), []int{6}
}

func (x *PeekRequest) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *PeekRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type PeekResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*QueueMessage        `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	Status        *common.Status         `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeekResponse) Reset() {
	*x = PeekResponse{}
	mi := &file_queue_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeekResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeekResponse) ProtoMessage() {}

func (x *PeekResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeekResponse.ProtoReflect.Descriptor instead.
func (*PeekResponse) Descriptor() ([]byte, []int) {
	return file_queue_proto_rawDescGZIP(), []int{7}
}

func (x *PeekResponse) GetMessages() []*QueueMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *PeekResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type AckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AckRequest) Reset() {
	*x = AckRequest{}
	mi := &file_queue_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckRequest) ProtoMessage() {}

func (x *AckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckRequest.ProtoReflect.Descriptor instead.
func (*AckRequest) Descriptor() ([]byte, []int) {
	return file_queue_proto_rawDescGZIP(), []int{8}
}

func (x *AckRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

type AckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *common.Status         `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AckResponse) Reset() {
	*x = AckResponse{}
	mi := &file_queue_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckResponse) ProtoMessage() {}

func (x *AckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckResponse.ProtoReflect.Descriptor instead.
func (*AckResponse) Descriptor() ([]byte, []int) {
	return file_queue_proto_rawDescGZIP(), []int{9}
}

func (x *AckResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type NackRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NackRequest) Reset() {
	*x = NackRequest{}
	mi := &file_queue_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NackRequest) ProtoMessage() {}

func (x *NackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NackRequest.ProtoReflect.Descriptor instead.
func (*NackRequest) Descriptor() ([]byte, []int) {
	return file_queue_proto_rawDescGZIP(), []int{10}
}

func (x *NackRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

type NackResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *common.Status         `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NackResponse) Reset() {
	*x = NackResponse{}
	mi := &file_queue_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NackResponse) ProtoMessage() {}

func (x *NackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NackResponse.ProtoReflect.Descriptor instead.
func (*NackResponse) Descriptor() ([]byte, []int) {
	return file_queue_proto_rawDescGZIP(), []int{11}
}

func (x *NackResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type StatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Queue         string                 `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatsRequest) Reset() {
	*x = StatsRequest{}
	mi := &file_queue_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsRequest) ProtoMessage() {}

func (x *StatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsRequest.ProtoReflect.Descriptor instead.
func (*StatsRequest) Descriptor() ([]byte, []int) {
	return file_queue_proto_rawDescGZIP(), []int{12}
}

func (x *StatsRequest) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

type StatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stats         *QueueStats            `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
	Status        *common.Status         `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatsResponse) Reset() {
	*x = StatsResponse{}
	mi := &file_queue_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsResponse) ProtoMessage() {}

func (x *StatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsResponse.ProtoReflect.Descriptor instead.
func (*StatsResponse) Descriptor() ([]byte, []int) {
	return file_queue_proto_rawDescGZIP(), []int{13}
}

func (x *StatsResponse) GetStats() *QueueStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *StatsResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type PurgeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Queue         string                 `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PurgeRequest) Reset() {
	*x = PurgeRequest{}
	mi := &file_queue_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgeRequest) ProtoMessage() {}

func (x *PurgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgeRequest.ProtoReflect.Descriptor instead.
func (*PurgeRequest) Descriptor() ([]byte, []int) {
	return file_queue_proto_rawDescGZIP(), []int{14}
}

func (x *PurgeRequest) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

type PurgeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PurgedCount   int64                  `protobuf:"varint,1,opt,name=purged_count,json=purgedCount,proto3" json:"purged_count,omitempty"`
	Status        *common.Status         `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PurgeResponse) Reset() {
	*x = PurgeResponse{}
	mi := &file_queue_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgeResponse) ProtoMessage() {}

func (x *PurgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgeResponse.ProtoReflect.Descriptor instead.
func (*PurgeResponse) Descriptor() ([]byte, []int) {
	return file_queue_proto_rawDescGZIP(), []int{15}
}

func (x *PurgeResponse) GetPurgedCount() int64 {
	if x != nil {
		return x.PurgedCount
	}
	return 0
}

func (x *PurgeResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type DeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Queue         string                 `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_queue_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_queue_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteRequest) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

type DeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *common.Status         `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_queue_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_queue_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type ListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	mi := &file_queue_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_queue_proto_rawDescGZIP(), []int{18}
}

type ListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Queues        []string               `protobuf:"bytes,1,rep,name=queues,proto3" json:"queues,omitempty"`
	Status        *common.Status         `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	mi := &file_queue_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_queue_proto_rawDescGZIP(), []int{19}
}

func (x *ListResponse) GetQueues() []string {
	if x != nil {
		return x.Queues
	}
	return nil
}

func (x *ListResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type BatchMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Delay         int64                  `protobuf:"varint,2,opt,name=delay,proto3" json:"delay,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchMessage) Reset() {
	*x = BatchMessage{}
	mi := &file_queue_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchMessage) ProtoMessage() {}

func (x *BatchMessage) ProtoReflect() protoreflect.Message {
	mi := &file_queue_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchMessage.ProtoReflect.Descriptor instead.
func (*BatchMessage) Descriptor() ([]byte, []int) {
	return file_queue_proto_rawDescGZIP(), []int{20}
}

func (x *BatchMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BatchMessage) GetDelay() int64 {
	if x != nil {
		return x.Delay
	}
	return 0
}

type PushBatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Queue         string                 `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	Messages      []*BatchMessage        `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PushBatchRequest) Reset() {
	*x = PushBatchRequest{}
	mi := &file_queue_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushBatchRequest) ProtoMessage() {}

func (x *PushBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushBatchRequest.ProtoReflect.Descriptor instead.
func (*PushBatchRequest) Descriptor() ([]byte, []int) {
	return file_queue_proto_rawDescGZIP(), []int{21}
}

func (x *PushBatchRequest) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *PushBatchRequest) GetMessages() []*BatchMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type PushBatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageIds    []string               `protobuf:"bytes,1,rep,name=message_ids,json=messageIds,proto3" json:"message_ids,omitempty"`
	Status        *common.Status         `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PushBatchResponse) Reset() {
	*x = PushBatchResponse{}
	mi := &file_queue_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushBatchResponse) ProtoMessage() {}

func (x *PushBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushBatchResponse.ProtoReflect.Descriptor instead.
func (*PushBatchResponse) Descriptor() ([]byte, []int) {
	return file_queue_proto_rawDescGZIP(), []int{22}
}

func (x *PushBatchResponse) GetMessageIds() []string {
	if x != nil {
		return x.MessageIds
	}
	return nil
}

func (x *PushBatchResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type PopBatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Queue         string                 `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Timeout       int64                  `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PopBatchRequest) Reset() {
	*x = PopBatchRequest{}
	mi := &file_queue_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PopBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PopBatchRequest) ProtoMessage() {}

func (x *PopBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PopBatchRequest.ProtoReflect.Descriptor instead.
func (*PopBatchRequest) Descriptor() ([]byte, []int) {
	return file_queue_proto_rawDescGZIP(), []int{23}
}

func (x *PopBatchRequest) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *PopBatchRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PopBatchRequest) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *PopBatchRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type PopBatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*QueueMessage        `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	Status        *common.Status         `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PopBatchResponse) Reset() {
	*x = PopBatchResponse{}
	mi := &file_queue_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PopBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PopBatchResponse) ProtoMessage() {}

func (x *PopBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PopBatchResponse.ProtoReflect.Descriptor instead.
func (*PopBatchResponse) Descriptor() ([]byte, []int) {
	return file_queue_proto_rawDescGZIP(), []int{24}
}

func (x *PopBatchResponse) GetMessages() []*QueueMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *PopBatchResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_queue_proto protoreflect.FileDescriptor

const file_queue_proto_rawDesc = "" +
	"\n" +
	"\vqueue.proto\x12\ffluxdl.queue\x1a\fcommon.proto\"\xca\x01\n" +
	"\fQueueMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05queue\x18\x02 \x01(\tR\x05queue\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\x03R\tcreatedAt\x12\x1f\n" +
	"\vdelay_until\x18\x05 \x01(\x03R\n" +
	"delayUntil\x12\x1f\n" +
	"\vretry_count\x18\x06 \x01(\x05R\n" +
	"retryCount\x12\x1f\n" +
	"\vconsumer_id\x18\a \x01(\tR\n" +
	"consumerId\"\xa2\x01\n" +
	"\n" +
	"QueueStats\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x03R\x04size\x12\x1c\n" +
	"\tconsumers\x18\x03 \x01(\x03R\tconsumers\x12\x18\n" +
	"\apending\x18\x04 \x01(\x03R\apending\x12\x1c\n" +
	"\tprocessed\x18\x05 \x01(\x03R\tprocessed\x12\x16\n" +
	"\x06failed\x18\x06 \x01(\x03R\x06failed\"i\n" +
	"\vPushRequest\x12\x14\n" +
	"\x05queue\x18\x01 \x01(\tR\x05queue\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12\x14\n" +
	"\x05delay\x18\x03 \x01(\x03R\x05delay\x12\x1a\n" +
	"\bpriority\x18\x04 \x01(\x05R\bpriority\"\\\n" +
	"\fPushResponse\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12-\n" +
	"\x06status\x18\x02 \x01(\v2\x15.fluxdl.common.StatusR\x06status\"]\n" +
	"\n" +
	"PopRequest\x12\x14\n" +
	"\x05queue\x18\x01 \x01(\tR\x05queue\x12\x18\n" +
	"\atimeout\x18\x02 \x01(\x05R\atimeout\x12\x1f\n" +
	"\vconsumer_id\x18\x03 \x01(\tR\n" +
	"consumerId\"r\n" +
	"\vPopResponse\x124\n" +
	"\amessage\x18\x01 \x01(\v2\x1a.fluxdl.queue.QueueMessageR\amessage\x12-\n" +
	"\x06status\x18\x02 \x01(\v2\x15.fluxdl.common.StatusR\x06status\"9\n" +
	"\vPeekRequest\x12\x14\n" +
	"\x05queue\x18\x01 \x01(\tR\x05queue\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\"u\n" +
	"\fPeekResponse\x126\n" +
	"\bmessages\x18\x01 \x03(\v2\x1a.fluxdl.queue.QueueMessageR\bmessages\x12-\n" +
	"\x06status\x18\x02 \x01(\v2\x15.fluxdl.common.StatusR\x06status\"+\n" +
	"\n" +
	"AckRequest\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\"<\n" +
	"\vAckResponse\x12-\n" +
	"\x06status\x18\x01 \x01(\v2\x15.fluxdl.common.StatusR\x06status\",\n" +
	"\vNackRequest\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\"=\n" +
	"\fNackResponse\x12-\n" +
	"\x06status\x18\x01 \x01(\v2\x15.fluxdl.common.StatusR\x06status\"$\n" +
	"\fStatsRequest\x12\x14\n" +
	"\x05queue\x18\x01 \x01(\tR\x05queue\"n\n" +
	"\rStatsResponse\x12.\n" +
	"\x05stats\x18\x01 \x01(\v2\x18.fluxdl.queue.QueueStatsR\x05stats\x12-\n" +
	"\x06status\x18\x02 \x01(\v2\x15.fluxdl.common.StatusR\x06status\"$\n" +
	"\fPurgeRequest\x12\x14\n" +
	"\x05queue\x18\x01 \x01(\tR\x05queue\"a\n" +
	"\rPurgeResponse\x12!\n" +
	"\fpurged_count\x18\x01 \x01(\x03R\vpurgedCount\x12-\n" +
	"\x06status\x18\x02 \x01(\v2\x15.fluxdl.common.StatusR\x06status\"%\n" +
	"\rDeleteRequest\x12\x14\n" +
	"\x05queue\x18\x01 \x01(\tR\x05queue\"?\n" +
	"\x0eDeleteResponse\x12-\n" +
	"\x06status\x18\x01 \x01(\v2\x15.fluxdl.common.StatusR\x06status\"\r\n" +
	"\vListRequest\"U\n" +
	"\fListResponse\x12\x16\n" +
	"\x06queues\x18\x01 \x03(\tR\x06queues\x12-\n" +
	"\x06status\x18\x02 \x01(\v2\x15.fluxdl.common.StatusR\x06status\"8\n" +
	"\fBatchMessage\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x14\n" +
	"\x05delay\x18\x02 \x01(\x03R\x05delay\"`\n" +
	"\x10PushBatchRequest\x12\x14\n" +
	"\x05queue\x18\x01 \x01(\tR\x05queue\x126\n" +
	"\bmessages\x18\x02 \x03(\v2\x1a.fluxdl.queue.BatchMessageR\bmessages\"c\n" +
	"\x11PushBatchResponse\x12\x1f\n" +
	"\vmessage_ids\x18\x01 \x03(\tR\n" +
	"messageIds\x12-\n" +
	"\x06status\x18\x02 \x01(\v2\x15.fluxdl.common.StatusR\x06status\"m\n" +
	"\x0fPopBatchRequest\x12\x14\n" +
	"\x05queue\x18\x01 \x01(\tR\x05queue\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\x12\x18\n" +
	"\atimeout\x18\x03 \x01(\x03R\atimeout\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\"y\n" +
	"\x10PopBatchResponse\x126\n" +
	"\bmessages\x18\x01 \x03(\v2\x1a.fluxdl.queue.QueueMessageR\bmessages\x12-\n" +
	"\x06status\x18\x02 \x01(\v2\x15.fluxdl.common.StatusR\x06status2\xe4\x05\n" +
	"\fQueueService\x12=\n" +
	"\x04Push\x12\x19.fluxdl.queue.PushRequest\x1a\x1a.fluxdl.queue.PushResponse\x12:\n" +
	"\x03Pop\x12\x18.fluxdl.queue.PopRequest\x1a\x19.fluxdl.queue.PopResponse\x12L\n" +
	"\tPushBatch\x12\x1e.fluxdl.queue.PushBatchRequest\x1a\x1f.fluxdl.queue.PushBatchResponse\x12I\n" +
	"\bPopBatch\x12\x1d.fluxdl.queue.PopBatchRequest\x1a\x1e.fluxdl.queue.PopBatchResponse\x12=\n" +
	"\x04Peek\x12\x19.fluxdl.queue.PeekRequest\x1a\x1a.fluxdl.queue.PeekResponse\x12:\n" +
	"\x03Ack\x12\x18.fluxdl.queue.AckRequest\x1a\x19.fluxdl.queue.AckResponse\x12=\n" +
	"\x04Nack\x12\x19.fluxdl.queue.NackRequest\x1a\x1a.fluxdl.queue.NackResponse\x12@\n" +
	"\x05Stats\x12\x1a.fluxdl.queue.StatsRequest\x1a\x1b.fluxdl.queue.StatsResponse\x12@\n" +
	"\x05Purge\x12\x1a.fluxdl.queue.PurgeRequest\x1a\x1b.fluxdl.queue.PurgeResponse\x12C\n" +
	"\x06Delete\x12\x1b.fluxdl.queue.DeleteRequest\x1a\x1c.fluxdl.queue.DeleteResponse\x12=\n" +
	"\x04List\x12\x19.fluxdl.queue.ListRequest\x1a\x1a.fluxdl.queue.ListResponseB4Z2github.com/skshohagmiah/fluxdl/api/generated/queueb\x06proto3"

var (
	file_queue_proto_rawDescOnce sync.Once
	file_queue_proto_rawDescData []byte
)

func file_queue_proto_rawDescGZIP() []byte {
	file_queue_proto_rawDescOnce.Do(func() {
		file_queue_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_queue_proto_rawDesc), len(file_queue_proto_rawDesc)))
	})
	return file_queue_proto_rawDescData
}

var file_queue_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_queue_proto_goTypes = []any{
	(*QueueMessage)(nil),      // 0: fluxdl.queue.QueueMessage
	(*QueueStats)(nil),        // 1: fluxdl.queue.QueueStats
	(*PushRequest)(nil),       // 2: fluxdl.queue.PushRequest
	(*PushResponse)(nil),      // 3: fluxdl.queue.PushResponse
	(*PopRequest)(nil),        // 4: fluxdl.queue.PopRequest
	(*PopResponse)(nil),       // 5: fluxdl.queue.PopResponse
	(*PeekRequest)(nil),       // 6: fluxdl.queue.PeekRequest
	(*PeekResponse)(nil),      // 7: fluxdl.queue.PeekResponse
	(*AckRequest)(nil),        // 8: fluxdl.queue.AckRequest
	(*AckResponse)(nil),       // 9: fluxdl.queue.AckResponse
	(*NackRequest)(nil),       // 10: fluxdl.queue.NackRequest
	(*NackResponse)(nil),      // 11: fluxdl.queue.NackResponse
	(*StatsRequest)(nil),      // 12: fluxdl.queue.StatsRequest
	(*StatsResponse)(nil),     // 13: fluxdl.queue.StatsResponse
	(*PurgeRequest)(nil),      // 14: fluxdl.queue.PurgeRequest
	(*PurgeResponse)(nil),     // 15: fluxdl.queue.PurgeResponse
	(*DeleteRequest)(nil),     // 16: fluxdl.queue.DeleteRequest
	(*DeleteResponse)(nil),    // 17: fluxdl.queue.DeleteResponse
	(*ListRequest)(nil),       // 18: fluxdl.queue.ListRequest
	(*ListResponse)(nil),      // 19: fluxdl.queue.ListResponse
	(*BatchMessage)(nil),      // 20: fluxdl.queue.BatchMessage
	(*PushBatchRequest)(nil),  // 21: fluxdl.queue.PushBatchRequest
	(*PushBatchResponse)(nil), // 22: fluxdl.queue.PushBatchResponse
	(*PopBatchRequest)(nil),   // 23: fluxdl.queue.PopBatchRequest
	(*PopBatchResponse)(nil),  // 24: fluxdl.queue.PopBatchResponse
	(*common.Status)(nil),     // 25: fluxdl.common.Status
}
var file_queue_proto_depIdxs = []int32{
	25, // 0: fluxdl.queue.PushResponse.status:type_name -> fluxdl.common.Status
	0,  // 1: fluxdl.queue.PopResponse.message:type_name -> fluxdl.queue.QueueMessage
	25, // 2: fluxdl.queue.PopResponse.status:type_name -> fluxdl.common.Status
	0,  // 3: fluxdl.queue.PeekResponse.messages:type_name -> fluxdl.queue.QueueMessage
	25, // 4: fluxdl.queue.PeekResponse.status:type_name -> fluxdl.common.Status
	25, // 5: fluxdl.queue.AckResponse.status:type_name -> fluxdl.common.Status
	25, // 6: fluxdl.queue.NackResponse.status:type_name -> fluxdl.common.Status
	1,  // 7: fluxdl.queue.StatsResponse.stats:type_name -> fluxdl.queue.QueueStats
	25, // 8: fluxdl.queue.StatsResponse.status:type_name -> fluxdl.common.Status
	25, // 9: fluxdl.queue.PurgeResponse.status:type_name -> fluxdl.common.Status
	25, // 10: fluxdl.queue.DeleteResponse.status:type_name -> fluxdl.common.Status
	25, // 11: fluxdl.queue.ListResponse.status:type_name -> fluxdl.common.Status
	20, // 12: fluxdl.queue.PushBatchRequest.messages:type_name -> fluxdl.queue.BatchMessage
	25, // 13: fluxdl.queue.PushBatchResponse.status:type_name -> fluxdl.common.Status
	0,  // 14: fluxdl.queue.PopBatchResponse.messages:type_name -> fluxdl.queue.QueueMessage
	25, // 15: fluxdl.queue.PopBatchResponse.status:type_name -> fluxdl.common.Status
	2,  // 16: fluxdl.queue.QueueService.Push:input_type -> fluxdl.queue.PushRequest
	4,  // 17: fluxdl.queue.QueueService.Pop:input_type -> fluxdl.queue.PopRequest
	21, // 18: fluxdl.queue.QueueService.PushBatch:input_type -> fluxdl.queue.PushBatchRequest
	23, // 19: fluxdl.queue.QueueService.PopBatch:input_type -> fluxdl.queue.PopBatchRequest
	6,  // 20: fluxdl.queue.QueueService.Peek:input_type -> fluxdl.queue.PeekRequest
	8,  // 21: fluxdl.queue.QueueService.Ack:input_type -> fluxdl.queue.AckRequest
	10, // 22: fluxdl.queue.QueueService.Nack:input_type -> fluxdl.queue.NackRequest
	12, // 23: fluxdl.queue.QueueService.Stats:input_type -> fluxdl.queue.StatsRequest
	14, // 24: fluxdl.queue.QueueService.Purge:input_type -> fluxdl.queue.PurgeRequest
	16, // 25: fluxdl.queue.QueueService.Delete:input_type -> fluxdl.queue.DeleteRequest
	18, // 26: fluxdl.queue.QueueService.List:input_type -> fluxdl.queue.ListRequest
	3,  // 27: fluxdl.queue.QueueService.Push:output_type -> fluxdl.queue.PushResponse
	5,  // 28: fluxdl.queue.QueueService.Pop:output_type -> fluxdl.queue.PopResponse
	22, // 29: fluxdl.queue.QueueService.PushBatch:output_type -> fluxdl.queue.PushBatchResponse
	24, // 30: fluxdl.queue.QueueService.PopBatch:output_type -> fluxdl.queue.PopBatchResponse
	7,  // 31: fluxdl.queue.QueueService.Peek:output_type -> fluxdl.queue.PeekResponse
	9,  // 32: fluxdl.queue.QueueService.Ack:output_type -> fluxdl.queue.AckResponse
	11, // 33: fluxdl.queue.QueueService.Nack:output_type -> fluxdl.queue.NackResponse
	13, // 34: fluxdl.queue.QueueService.Stats:output_type -> fluxdl.queue.StatsResponse
	15, // 35: fluxdl.queue.QueueService.Purge:output_type -> fluxdl.queue.PurgeResponse
	17, // 36: fluxdl.queue.QueueService.Delete:output_type -> fluxdl.queue.DeleteResponse
	19, // 37: fluxdl.queue.QueueService.List:output_type -> fluxdl.queue.ListResponse
	27, // [27:38] is the sub-list for method output_type
	16, // [16:27] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_queue_proto_init() }
func file_queue_proto_init() {
	if File_queue_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_queue_proto_rawDesc), len(file_queue_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_queue_proto_goTypes,
		DependencyIndexes: file_queue_proto_depIdxs,
		MessageInfos:      file_queue_proto_msgTypes,
	}.Build()
	File_queue_proto = out.File
	file_queue_proto_goTypes = nil
	file_queue_proto_depIdxs = nil
}
