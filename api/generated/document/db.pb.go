// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: db.proto

package document

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Document represents a JSON document
type Document struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                // Document ID (_id field)
	Data          *structpb.Struct       `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`                            // Document data as JSON
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // Creation timestamp
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // Last update timestamp
	Version       int64                  `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`                     // Document version for optimistic locking
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Document) Reset() {
	*x = Document{}
	mi := &file_db_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{0}
}

func (x *Document) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Document) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Document) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Document) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Document) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

// Query represents a MongoDB-style query
type Query struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *structpb.Struct       `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`         // Query filter (e.g., {"name": "John", "age": {"$gt": 25}})
	Sort          *structpb.Struct       `protobuf:"bytes,2,opt,name=sort,proto3" json:"sort,omitempty"`             // Sort specification (e.g., {"name": 1, "age": -1})
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`          // Maximum number of documents to return
	Skip          int32                  `protobuf:"varint,4,opt,name=skip,proto3" json:"skip,omitempty"`            // Number of documents to skip
	Projection    *structpb.Struct       `protobuf:"bytes,5,opt,name=projection,proto3" json:"projection,omitempty"` // Fields to include/exclude
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Query) Reset() {
	*x = Query{}
	mi := &file_db_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{1}
}

func (x *Query) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *Query) GetSort() *structpb.Struct {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *Query) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Query) GetSkip() int32 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *Query) GetProjection() *structpb.Struct {
	if x != nil {
		return x.Projection
	}
	return nil
}

// Update represents a MongoDB-style update operation
type Update struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Set           *structpb.Struct       `protobuf:"bytes,1,opt,name=set,proto3" json:"set,omitempty"`                             // $set operations
	Unset         *structpb.Struct       `protobuf:"bytes,2,opt,name=unset,proto3" json:"unset,omitempty"`                         // $unset operations
	Inc           *structpb.Struct       `protobuf:"bytes,3,opt,name=inc,proto3" json:"inc,omitempty"`                             // $inc operations
	Push          *structpb.Struct       `protobuf:"bytes,4,opt,name=push,proto3" json:"push,omitempty"`                           // $push operations
	Pull          *structpb.Struct       `protobuf:"bytes,5,opt,name=pull,proto3" json:"pull,omitempty"`                           // $pull operations
	AddToSet      *structpb.Struct       `protobuf:"bytes,6,opt,name=add_to_set,json=addToSet,proto3" json:"add_to_set,omitempty"` // $addToSet operations
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Update) Reset() {
	*x = Update{}
	mi := &file_db_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Update) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Update) ProtoMessage() {}

func (x *Update) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Update.ProtoReflect.Descriptor instead.
func (*Update) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{2}
}

func (x *Update) GetSet() *structpb.Struct {
	if x != nil {
		return x.Set
	}
	return nil
}

func (x *Update) GetUnset() *structpb.Struct {
	if x != nil {
		return x.Unset
	}
	return nil
}

func (x *Update) GetInc() *structpb.Struct {
	if x != nil {
		return x.Inc
	}
	return nil
}

func (x *Update) GetPush() *structpb.Struct {
	if x != nil {
		return x.Push
	}
	return nil
}

func (x *Update) GetPull() *structpb.Struct {
	if x != nil {
		return x.Pull
	}
	return nil
}

func (x *Update) GetAddToSet() *structpb.Struct {
	if x != nil {
		return x.AddToSet
	}
	return nil
}

// Index specification
type IndexSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                        // Index name
	Keys          *structpb.Struct       `protobuf:"bytes,2,opt,name=keys,proto3" json:"keys,omitempty"`                                        // Index keys (e.g., {"name": 1, "email": -1})
	Unique        bool                   `protobuf:"varint,3,opt,name=unique,proto3" json:"unique,omitempty"`                                   // Whether index should be unique
	Sparse        bool                   `protobuf:"varint,4,opt,name=sparse,proto3" json:"sparse,omitempty"`                                   // Whether index should be sparse
	TtlSeconds    int32                  `protobuf:"varint,5,opt,name=ttl_seconds,json=ttlSeconds,proto3" json:"ttl_seconds,omitempty"`         // TTL for documents (0 = no TTL)
	PartialFilter *structpb.Struct       `protobuf:"bytes,6,opt,name=partial_filter,json=partialFilter,proto3" json:"partial_filter,omitempty"` // Partial index filter
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexSpec) Reset() {
	*x = IndexSpec{}
	mi := &file_db_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexSpec) ProtoMessage() {}

func (x *IndexSpec) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexSpec.ProtoReflect.Descriptor instead.
func (*IndexSpec) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{3}
}

func (x *IndexSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IndexSpec) GetKeys() *structpb.Struct {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *IndexSpec) GetUnique() bool {
	if x != nil {
		return x.Unique
	}
	return false
}

func (x *IndexSpec) GetSparse() bool {
	if x != nil {
		return x.Sparse
	}
	return false
}

func (x *IndexSpec) GetTtlSeconds() int32 {
	if x != nil {
		return x.TtlSeconds
	}
	return 0
}

func (x *IndexSpec) GetPartialFilter() *structpb.Struct {
	if x != nil {
		return x.PartialFilter
	}
	return nil
}

// Collection information
type CollectionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                         // Collection name
	DocumentCount int64                  `protobuf:"varint,2,opt,name=document_count,json=documentCount,proto3" json:"document_count,omitempty"` // Number of documents
	SizeBytes     int64                  `protobuf:"varint,3,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`             // Collection size in bytes
	Indexes       []*IndexSpec           `protobuf:"bytes,4,rep,name=indexes,proto3" json:"indexes,omitempty"`                                   // Collection indexes
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`              // Creation timestamp
	Options       *CollectionOptions     `protobuf:"bytes,6,opt,name=options,proto3" json:"options,omitempty"`                                   // Collection options
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CollectionInfo) Reset() {
	*x = CollectionInfo{}
	mi := &file_db_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionInfo) ProtoMessage() {}

func (x *CollectionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionInfo.ProtoReflect.Descriptor instead.
func (*CollectionInfo) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{4}
}

func (x *CollectionInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CollectionInfo) GetDocumentCount() int64 {
	if x != nil {
		return x.DocumentCount
	}
	return 0
}

func (x *CollectionInfo) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *CollectionInfo) GetIndexes() []*IndexSpec {
	if x != nil {
		return x.Indexes
	}
	return nil
}

func (x *CollectionInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CollectionInfo) GetOptions() *CollectionOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// Collection creation options
type CollectionOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Capped        bool                   `protobuf:"varint,1,opt,name=capped,proto3" json:"capped,omitempty"`                                 // Whether collection is capped
	MaxSize       int64                  `protobuf:"varint,2,opt,name=max_size,json=maxSize,proto3" json:"max_size,omitempty"`                // Maximum size for capped collections
	MaxDocuments  int64                  `protobuf:"varint,3,opt,name=max_documents,json=maxDocuments,proto3" json:"max_documents,omitempty"` // Maximum documents for capped collections
	Validator     *structpb.Struct       `protobuf:"bytes,4,opt,name=validator,proto3" json:"validator,omitempty"`                            // Document validation schema
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CollectionOptions) Reset() {
	*x = CollectionOptions{}
	mi := &file_db_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectionOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionOptions) ProtoMessage() {}

func (x *CollectionOptions) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionOptions.ProtoReflect.Descriptor instead.
func (*CollectionOptions) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{5}
}

func (x *CollectionOptions) GetCapped() bool {
	if x != nil {
		return x.Capped
	}
	return false
}

func (x *CollectionOptions) GetMaxSize() int64 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

func (x *CollectionOptions) GetMaxDocuments() int64 {
	if x != nil {
		return x.MaxDocuments
	}
	return 0
}

func (x *CollectionOptions) GetValidator() *structpb.Struct {
	if x != nil {
		return x.Validator
	}
	return nil
}

// Aggregation pipeline stage
type PipelineStage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stage         string                 `protobuf:"bytes,1,opt,name=stage,proto3" json:"stage,omitempty"` // Stage name (e.g., "$match", "$group", "$sort")
	Spec          *structpb.Struct       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`   // Stage specification
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PipelineStage) Reset() {
	*x = PipelineStage{}
	mi := &file_db_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PipelineStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineStage) ProtoMessage() {}

func (x *PipelineStage) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineStage.ProtoReflect.Descriptor instead.
func (*PipelineStage) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{6}
}

func (x *PipelineStage) GetStage() string {
	if x != nil {
		return x.Stage
	}
	return ""
}

func (x *PipelineStage) GetSpec() *structpb.Struct {
	if x != nil {
		return x.Spec
	}
	return nil
}

// Bulk write operation
type BulkOperation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Operation:
	//
	//	*BulkOperation_InsertOne
	//	*BulkOperation_UpdateOne
	//	*BulkOperation_UpdateMany
	//	*BulkOperation_DeleteOne
	//	*BulkOperation_DeleteMany
	//	*BulkOperation_ReplaceOne
	//	*BulkOperation_UpsertOne
	Operation     isBulkOperation_Operation `protobuf_oneof:"operation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BulkOperation) Reset() {
	*x = BulkOperation{}
	mi := &file_db_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkOperation) ProtoMessage() {}

func (x *BulkOperation) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkOperation.ProtoReflect.Descriptor instead.
func (*BulkOperation) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{7}
}

func (x *BulkOperation) GetOperation() isBulkOperation_Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *BulkOperation) GetInsertOne() *InsertOneRequest {
	if x != nil {
		if x, ok := x.Operation.(*BulkOperation_InsertOne); ok {
			return x.InsertOne
		}
	}
	return nil
}

func (x *BulkOperation) GetUpdateOne() *UpdateOneRequest {
	if x != nil {
		if x, ok := x.Operation.(*BulkOperation_UpdateOne); ok {
			return x.UpdateOne
		}
	}
	return nil
}

func (x *BulkOperation) GetUpdateMany() *UpdateManyRequest {
	if x != nil {
		if x, ok := x.Operation.(*BulkOperation_UpdateMany); ok {
			return x.UpdateMany
		}
	}
	return nil
}

func (x *BulkOperation) GetDeleteOne() *DeleteOneRequest {
	if x != nil {
		if x, ok := x.Operation.(*BulkOperation_DeleteOne); ok {
			return x.DeleteOne
		}
	}
	return nil
}

func (x *BulkOperation) GetDeleteMany() *DeleteManyRequest {
	if x != nil {
		if x, ok := x.Operation.(*BulkOperation_DeleteMany); ok {
			return x.DeleteMany
		}
	}
	return nil
}

func (x *BulkOperation) GetReplaceOne() *ReplaceOneRequest {
	if x != nil {
		if x, ok := x.Operation.(*BulkOperation_ReplaceOne); ok {
			return x.ReplaceOne
		}
	}
	return nil
}

func (x *BulkOperation) GetUpsertOne() *UpsertOneRequest {
	if x != nil {
		if x, ok := x.Operation.(*BulkOperation_UpsertOne); ok {
			return x.UpsertOne
		}
	}
	return nil
}

type isBulkOperation_Operation interface {
	isBulkOperation_Operation()
}

type BulkOperation_InsertOne struct {
	InsertOne *InsertOneRequest `protobuf:"bytes,1,opt,name=insert_one,json=insertOne,proto3,oneof"`
}

type BulkOperation_UpdateOne struct {
	UpdateOne *UpdateOneRequest `protobuf:"bytes,2,opt,name=update_one,json=updateOne,proto3,oneof"`
}

type BulkOperation_UpdateMany struct {
	UpdateMany *UpdateManyRequest `protobuf:"bytes,3,opt,name=update_many,json=updateMany,proto3,oneof"`
}

type BulkOperation_DeleteOne struct {
	DeleteOne *DeleteOneRequest `protobuf:"bytes,4,opt,name=delete_one,json=deleteOne,proto3,oneof"`
}

type BulkOperation_DeleteMany struct {
	DeleteMany *DeleteManyRequest `protobuf:"bytes,5,opt,name=delete_many,json=deleteMany,proto3,oneof"`
}

type BulkOperation_ReplaceOne struct {
	ReplaceOne *ReplaceOneRequest `protobuf:"bytes,6,opt,name=replace_one,json=replaceOne,proto3,oneof"`
}

type BulkOperation_UpsertOne struct {
	UpsertOne *UpsertOneRequest `protobuf:"bytes,7,opt,name=upsert_one,json=upsertOne,proto3,oneof"`
}

func (*BulkOperation_InsertOne) isBulkOperation_Operation() {}

func (*BulkOperation_UpdateOne) isBulkOperation_Operation() {}

func (*BulkOperation_UpdateMany) isBulkOperation_Operation() {}

func (*BulkOperation_DeleteOne) isBulkOperation_Operation() {}

func (*BulkOperation_DeleteMany) isBulkOperation_Operation() {}

func (*BulkOperation_ReplaceOne) isBulkOperation_Operation() {}

func (*BulkOperation_UpsertOne) isBulkOperation_Operation() {}

// Write result for bulk operations
type WriteResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Acknowledged  bool                   `protobuf:"varint,1,opt,name=acknowledged,proto3" json:"acknowledged,omitempty"`                        // Whether operation was acknowledged
	InsertedCount int64                  `protobuf:"varint,2,opt,name=inserted_count,json=insertedCount,proto3" json:"inserted_count,omitempty"` // Number of documents inserted
	MatchedCount  int64                  `protobuf:"varint,3,opt,name=matched_count,json=matchedCount,proto3" json:"matched_count,omitempty"`    // Number of documents matched
	ModifiedCount int64                  `protobuf:"varint,4,opt,name=modified_count,json=modifiedCount,proto3" json:"modified_count,omitempty"` // Number of documents modified
	DeletedCount  int64                  `protobuf:"varint,5,opt,name=deleted_count,json=deletedCount,proto3" json:"deleted_count,omitempty"`    // Number of documents deleted
	InsertedIds   []string               `protobuf:"bytes,6,rep,name=inserted_ids,json=insertedIds,proto3" json:"inserted_ids,omitempty"`        // IDs of inserted documents
	UpsertedIds   []string               `protobuf:"bytes,7,rep,name=upserted_ids,json=upsertedIds,proto3" json:"upserted_ids,omitempty"`        // IDs of upserted documents
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteResult) Reset() {
	*x = WriteResult{}
	mi := &file_db_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteResult) ProtoMessage() {}

func (x *WriteResult) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteResult.ProtoReflect.Descriptor instead.
func (*WriteResult) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{8}
}

func (x *WriteResult) GetAcknowledged() bool {
	if x != nil {
		return x.Acknowledged
	}
	return false
}

func (x *WriteResult) GetInsertedCount() int64 {
	if x != nil {
		return x.InsertedCount
	}
	return 0
}

func (x *WriteResult) GetMatchedCount() int64 {
	if x != nil {
		return x.MatchedCount
	}
	return 0
}

func (x *WriteResult) GetModifiedCount() int64 {
	if x != nil {
		return x.ModifiedCount
	}
	return 0
}

func (x *WriteResult) GetDeletedCount() int64 {
	if x != nil {
		return x.DeletedCount
	}
	return 0
}

func (x *WriteResult) GetInsertedIds() []string {
	if x != nil {
		return x.InsertedIds
	}
	return nil
}

func (x *WriteResult) GetUpsertedIds() []string {
	if x != nil {
		return x.UpsertedIds
	}
	return nil
}

// Transaction context
type TransactionContext struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TransactionId  string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`     // Transaction ID
	StartedAt      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`                 // Transaction start time
	TimeoutSeconds int32                  `protobuf:"varint,3,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"` // Transaction timeout
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TransactionContext) Reset() {
	*x = TransactionContext{}
	mi := &file_db_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionContext) ProtoMessage() {}

func (x *TransactionContext) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionContext.ProtoReflect.Descriptor instead.
func (*TransactionContext) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{9}
}

func (x *TransactionContext) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *TransactionContext) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *TransactionContext) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

// Collection management requests/responses
type CreateCollectionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collection    string                 `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Options       *CollectionOptions     `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCollectionRequest) Reset() {
	*x = CreateCollectionRequest{}
	mi := &file_db_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCollectionRequest) ProtoMessage() {}

func (x *CreateCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCollectionRequest.ProtoReflect.Descriptor instead.
func (*CreateCollectionRequest) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{10}
}

func (x *CreateCollectionRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *CreateCollectionRequest) GetOptions() *CollectionOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type CreateCollectionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCollectionResponse) Reset() {
	*x = CreateCollectionResponse{}
	mi := &file_db_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCollectionResponse) ProtoMessage() {}

func (x *CreateCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCollectionResponse.ProtoReflect.Descriptor instead.
func (*CreateCollectionResponse) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{11}
}

func (x *CreateCollectionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateCollectionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DropCollectionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collection    string                 `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropCollectionRequest) Reset() {
	*x = DropCollectionRequest{}
	mi := &file_db_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropCollectionRequest) ProtoMessage() {}

func (x *DropCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropCollectionRequest.ProtoReflect.Descriptor instead.
func (*DropCollectionRequest) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{12}
}

func (x *DropCollectionRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

type DropCollectionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropCollectionResponse) Reset() {
	*x = DropCollectionResponse{}
	mi := &file_db_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropCollectionResponse) ProtoMessage() {}

func (x *DropCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropCollectionResponse.ProtoReflect.Descriptor instead.
func (*DropCollectionResponse) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{13}
}

func (x *DropCollectionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DropCollectionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListCollectionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCollectionsRequest) Reset() {
	*x = ListCollectionsRequest{}
	mi := &file_db_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCollectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionsRequest) ProtoMessage() {}

func (x *ListCollectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCollectionsRequest.ProtoReflect.Descriptor instead.
func (*ListCollectionsRequest) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{14}
}

type ListCollectionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collections   []string               `protobuf:"bytes,1,rep,name=collections,proto3" json:"collections,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCollectionsResponse) Reset() {
	*x = ListCollectionsResponse{}
	mi := &file_db_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCollectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionsResponse) ProtoMessage() {}

func (x *ListCollectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCollectionsResponse.ProtoReflect.Descriptor instead.
func (*ListCollectionsResponse) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{15}
}

func (x *ListCollectionsResponse) GetCollections() []string {
	if x != nil {
		return x.Collections
	}
	return nil
}

type GetCollectionInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collection    string                 `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCollectionInfoRequest) Reset() {
	*x = GetCollectionInfoRequest{}
	mi := &file_db_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCollectionInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectionInfoRequest) ProtoMessage() {}

func (x *GetCollectionInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectionInfoRequest.ProtoReflect.Descriptor instead.
func (*GetCollectionInfoRequest) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{16}
}

func (x *GetCollectionInfoRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

type GetCollectionInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *CollectionInfo        `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCollectionInfoResponse) Reset() {
	*x = GetCollectionInfoResponse{}
	mi := &file_db_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCollectionInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectionInfoResponse) ProtoMessage() {}

func (x *GetCollectionInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectionInfoResponse.ProtoReflect.Descriptor instead.
func (*GetCollectionInfoResponse) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{17}
}

func (x *GetCollectionInfoResponse) GetInfo() *CollectionInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// Document operation requests/responses
type InsertOneRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collection    string                 `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Document      *structpb.Struct       `protobuf:"bytes,2,opt,name=document,proto3" json:"document,omitempty"`
	Transaction   *TransactionContext    `protobuf:"bytes,3,opt,name=transaction,proto3" json:"transaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertOneRequest) Reset() {
	*x = InsertOneRequest{}
	mi := &file_db_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertOneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertOneRequest) ProtoMessage() {}

func (x *InsertOneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertOneRequest.ProtoReflect.Descriptor instead.
func (*InsertOneRequest) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{18}
}

func (x *InsertOneRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *InsertOneRequest) GetDocument() *structpb.Struct {
	if x != nil {
		return x.Document
	}
	return nil
}

func (x *InsertOneRequest) GetTransaction() *TransactionContext {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type InsertOneResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InsertedId    string                 `protobuf:"bytes,1,opt,name=inserted_id,json=insertedId,proto3" json:"inserted_id,omitempty"`
	Result        *WriteResult           `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertOneResponse) Reset() {
	*x = InsertOneResponse{}
	mi := &file_db_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertOneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertOneResponse) ProtoMessage() {}

func (x *InsertOneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertOneResponse.ProtoReflect.Descriptor instead.
func (*InsertOneResponse) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{19}
}

func (x *InsertOneResponse) GetInsertedId() string {
	if x != nil {
		return x.InsertedId
	}
	return ""
}

func (x *InsertOneResponse) GetResult() *WriteResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type InsertManyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collection    string                 `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Documents     []*structpb.Struct     `protobuf:"bytes,2,rep,name=documents,proto3" json:"documents,omitempty"`
	Ordered       bool                   `protobuf:"varint,3,opt,name=ordered,proto3" json:"ordered,omitempty"` // Whether to stop on first error
	Transaction   *TransactionContext    `protobuf:"bytes,4,opt,name=transaction,proto3" json:"transaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertManyRequest) Reset() {
	*x = InsertManyRequest{}
	mi := &file_db_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertManyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertManyRequest) ProtoMessage() {}

func (x *InsertManyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertManyRequest.ProtoReflect.Descriptor instead.
func (*InsertManyRequest) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{20}
}

func (x *InsertManyRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *InsertManyRequest) GetDocuments() []*structpb.Struct {
	if x != nil {
		return x.Documents
	}
	return nil
}

func (x *InsertManyRequest) GetOrdered() bool {
	if x != nil {
		return x.Ordered
	}
	return false
}

func (x *InsertManyRequest) GetTransaction() *TransactionContext {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type InsertManyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InsertedIds   []string               `protobuf:"bytes,1,rep,name=inserted_ids,json=insertedIds,proto3" json:"inserted_ids,omitempty"`
	Result        *WriteResult           `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertManyResponse) Reset() {
	*x = InsertManyResponse{}
	mi := &file_db_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertManyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertManyResponse) ProtoMessage() {}

func (x *InsertManyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertManyResponse.ProtoReflect.Descriptor instead.
func (*InsertManyResponse) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{21}
}

func (x *InsertManyResponse) GetInsertedIds() []string {
	if x != nil {
		return x.InsertedIds
	}
	return nil
}

func (x *InsertManyResponse) GetResult() *WriteResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type FindOneRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collection    string                 `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Query         *Query                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Transaction   *TransactionContext    `protobuf:"bytes,3,opt,name=transaction,proto3" json:"transaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindOneRequest) Reset() {
	*x = FindOneRequest{}
	mi := &file_db_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindOneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOneRequest) ProtoMessage() {}

func (x *FindOneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOneRequest.ProtoReflect.Descriptor instead.
func (*FindOneRequest) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{22}
}

func (x *FindOneRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *FindOneRequest) GetQuery() *Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *FindOneRequest) GetTransaction() *TransactionContext {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type FindOneResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Document      *Document              `protobuf:"bytes,1,opt,name=document,proto3" json:"document,omitempty"`
	Found         bool                   `protobuf:"varint,2,opt,name=found,proto3" json:"found,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindOneResponse) Reset() {
	*x = FindOneResponse{}
	mi := &file_db_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindOneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOneResponse) ProtoMessage() {}

func (x *FindOneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOneResponse.ProtoReflect.Descriptor instead.
func (*FindOneResponse) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{23}
}

func (x *FindOneResponse) GetDocument() *Document {
	if x != nil {
		return x.Document
	}
	return nil
}

func (x *FindOneResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

type FindManyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collection    string                 `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Query         *Query                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Transaction   *TransactionContext    `protobuf:"bytes,3,opt,name=transaction,proto3" json:"transaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindManyRequest) Reset() {
	*x = FindManyRequest{}
	mi := &file_db_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindManyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindManyRequest) ProtoMessage() {}

func (x *FindManyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindManyRequest.ProtoReflect.Descriptor instead.
func (*FindManyRequest) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{24}
}

func (x *FindManyRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *FindManyRequest) GetQuery() *Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *FindManyRequest) GetTransaction() *TransactionContext {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type FindManyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Documents     []*Document            `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
	TotalCount    int64                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"` // Total matching documents (ignoring limit/skip)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindManyResponse) Reset() {
	*x = FindManyResponse{}
	mi := &file_db_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindManyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindManyResponse) ProtoMessage() {}

func (x *FindManyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindManyResponse.ProtoReflect.Descriptor instead.
func (*FindManyResponse) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{25}
}

func (x *FindManyResponse) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

func (x *FindManyResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type UpdateOneRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collection    string                 `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Filter        *structpb.Struct       `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Update        *Update                `protobuf:"bytes,3,opt,name=update,proto3" json:"update,omitempty"`
	Upsert        bool                   `protobuf:"varint,4,opt,name=upsert,proto3" json:"upsert,omitempty"` // Whether to insert if not found
	Transaction   *TransactionContext    `protobuf:"bytes,5,opt,name=transaction,proto3" json:"transaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateOneRequest) Reset() {
	*x = UpdateOneRequest{}
	mi := &file_db_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOneRequest) ProtoMessage() {}

func (x *UpdateOneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOneRequest.ProtoReflect.Descriptor instead.
func (*UpdateOneRequest) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateOneRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *UpdateOneRequest) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *UpdateOneRequest) GetUpdate() *Update {
	if x != nil {
		return x.Update
	}
	return nil
}

func (x *UpdateOneRequest) GetUpsert() bool {
	if x != nil {
		return x.Upsert
	}
	return false
}

func (x *UpdateOneRequest) GetTransaction() *TransactionContext {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type UpdateOneResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *WriteResult           `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateOneResponse) Reset() {
	*x = UpdateOneResponse{}
	mi := &file_db_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOneResponse) ProtoMessage() {}

func (x *UpdateOneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOneResponse.ProtoReflect.Descriptor instead.
func (*UpdateOneResponse) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateOneResponse) GetResult() *WriteResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type UpdateManyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collection    string                 `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Filter        *structpb.Struct       `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Update        *Update                `protobuf:"bytes,3,opt,name=update,proto3" json:"update,omitempty"`
	Transaction   *TransactionContext    `protobuf:"bytes,4,opt,name=transaction,proto3" json:"transaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateManyRequest) Reset() {
	*x = UpdateManyRequest{}
	mi := &file_db_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateManyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateManyRequest) ProtoMessage() {}

func (x *UpdateManyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateManyRequest.ProtoReflect.Descriptor instead.
func (*UpdateManyRequest) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateManyRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *UpdateManyRequest) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *UpdateManyRequest) GetUpdate() *Update {
	if x != nil {
		return x.Update
	}
	return nil
}

func (x *UpdateManyRequest) GetTransaction() *TransactionContext {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type UpdateManyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *WriteResult           `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateManyResponse) Reset() {
	*x = UpdateManyResponse{}
	mi := &file_db_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateManyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateManyResponse) ProtoMessage() {}

func (x *UpdateManyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateManyResponse.ProtoReflect.Descriptor instead.
func (*UpdateManyResponse) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateManyResponse) GetResult() *WriteResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type DeleteOneRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collection    string                 `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Filter        *structpb.Struct       `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Transaction   *TransactionContext    `protobuf:"bytes,3,opt,name=transaction,proto3" json:"transaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteOneRequest) Reset() {
	*x = DeleteOneRequest{}
	mi := &file_db_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteOneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOneRequest) ProtoMessage() {}

func (x *DeleteOneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOneRequest.ProtoReflect.Descriptor instead.
func (*DeleteOneRequest) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{30}
}

func (x *DeleteOneRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *DeleteOneRequest) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *DeleteOneRequest) GetTransaction() *TransactionContext {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type DeleteOneResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *WriteResult           `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteOneResponse) Reset() {
	*x = DeleteOneResponse{}
	mi := &file_db_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteOneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOneResponse) ProtoMessage() {}

func (x *DeleteOneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOneResponse.ProtoReflect.Descriptor instead.
func (*DeleteOneResponse) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{31}
}

func (x *DeleteOneResponse) GetResult() *WriteResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type DeleteManyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collection    string                 `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Filter        *structpb.Struct       `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Transaction   *TransactionContext    `protobuf:"bytes,3,opt,name=transaction,proto3" json:"transaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteManyRequest) Reset() {
	*x = DeleteManyRequest{}
	mi := &file_db_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteManyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteManyRequest) ProtoMessage() {}

func (x *DeleteManyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteManyRequest.ProtoReflect.Descriptor instead.
func (*DeleteManyRequest) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteManyRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *DeleteManyRequest) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *DeleteManyRequest) GetTransaction() *TransactionContext {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type DeleteManyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *WriteResult           `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteManyResponse) Reset() {
	*x = DeleteManyResponse{}
	mi := &file_db_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteManyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteManyResponse) ProtoMessage() {}

func (x *DeleteManyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteManyResponse.ProtoReflect.Descriptor instead.
func (*DeleteManyResponse) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteManyResponse) GetResult() *WriteResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type ReplaceOneRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collection    string                 `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Filter        *structpb.Struct       `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Replacement   *structpb.Struct       `protobuf:"bytes,3,opt,name=replacement,proto3" json:"replacement,omitempty"`
	Upsert        bool                   `protobuf:"varint,4,opt,name=upsert,proto3" json:"upsert,omitempty"`
	Transaction   *TransactionContext    `protobuf:"bytes,5,opt,name=transaction,proto3" json:"transaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplaceOneRequest) Reset() {
	*x = ReplaceOneRequest{}
	mi := &file_db_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplaceOneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceOneRequest) ProtoMessage() {}

func (x *ReplaceOneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceOneRequest.ProtoReflect.Descriptor instead.
func (*ReplaceOneRequest) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{34}
}

func (x *ReplaceOneRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *ReplaceOneRequest) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ReplaceOneRequest) GetReplacement() *structpb.Struct {
	if x != nil {
		return x.Replacement
	}
	return nil
}

func (x *ReplaceOneRequest) GetUpsert() bool {
	if x != nil {
		return x.Upsert
	}
	return false
}

func (x *ReplaceOneRequest) GetTransaction() *TransactionContext {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type ReplaceOneResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *WriteResult           `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplaceOneResponse) Reset() {
	*x = ReplaceOneResponse{}
	mi := &file_db_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplaceOneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceOneResponse) ProtoMessage() {}

func (x *ReplaceOneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceOneResponse.ProtoReflect.Descriptor instead.
func (*ReplaceOneResponse) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{35}
}

func (x *ReplaceOneResponse) GetResult() *WriteResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type UpsertOneRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collection    string                 `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Filter        *structpb.Struct       `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Document      *structpb.Struct       `protobuf:"bytes,3,opt,name=document,proto3" json:"document,omitempty"`
	Transaction   *TransactionContext    `protobuf:"bytes,4,opt,name=transaction,proto3" json:"transaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertOneRequest) Reset() {
	*x = UpsertOneRequest{}
	mi := &file_db_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertOneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertOneRequest) ProtoMessage() {}

func (x *UpsertOneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertOneRequest.ProtoReflect.Descriptor instead.
func (*UpsertOneRequest) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{36}
}

func (x *UpsertOneRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *UpsertOneRequest) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *UpsertOneRequest) GetDocument() *structpb.Struct {
	if x != nil {
		return x.Document
	}
	return nil
}

func (x *UpsertOneRequest) GetTransaction() *TransactionContext {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type UpsertOneResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *WriteResult           `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertOneResponse) Reset() {
	*x = UpsertOneResponse{}
	mi := &file_db_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertOneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertOneResponse) ProtoMessage() {}

func (x *UpsertOneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertOneResponse.ProtoReflect.Descriptor instead.
func (*UpsertOneResponse) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{37}
}

func (x *UpsertOneResponse) GetResult() *WriteResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// Aggregation requests/responses
type AggregateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collection    string                 `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Pipeline      []*PipelineStage       `protobuf:"bytes,2,rep,name=pipeline,proto3" json:"pipeline,omitempty"`
	Transaction   *TransactionContext    `protobuf:"bytes,3,opt,name=transaction,proto3" json:"transaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregateRequest) Reset() {
	*x = AggregateRequest{}
	mi := &file_db_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateRequest) ProtoMessage() {}

func (x *AggregateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateRequest.ProtoReflect.Descriptor instead.
func (*AggregateRequest) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{38}
}

func (x *AggregateRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *AggregateRequest) GetPipeline() []*PipelineStage {
	if x != nil {
		return x.Pipeline
	}
	return nil
}

func (x *AggregateRequest) GetTransaction() *TransactionContext {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type AggregateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*structpb.Struct     `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregateResponse) Reset() {
	*x = AggregateResponse{}
	mi := &file_db_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateResponse) ProtoMessage() {}

func (x *AggregateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateResponse.ProtoReflect.Descriptor instead.
func (*AggregateResponse) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{39}
}

func (x *AggregateResponse) GetResults() []*structpb.Struct {
	if x != nil {
		return x.Results
	}
	return nil
}

type CountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collection    string                 `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Filter        *structpb.Struct       `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Transaction   *TransactionContext    `protobuf:"bytes,3,opt,name=transaction,proto3" json:"transaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountRequest) Reset() {
	*x = CountRequest{}
	mi := &file_db_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountRequest) ProtoMessage() {}

func (x *CountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountRequest.ProtoReflect.Descriptor instead.
func (*CountRequest) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{40}
}

func (x *CountRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *CountRequest) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *CountRequest) GetTransaction() *TransactionContext {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type CountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountResponse) Reset() {
	*x = CountResponse{}
	mi := &file_db_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountResponse) ProtoMessage() {}

func (x *CountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountResponse.ProtoReflect.Descriptor instead.
func (*CountResponse) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{41}
}

func (x *CountResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type DistinctRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collection    string                 `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Field         string                 `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
	Filter        *structpb.Struct       `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Transaction   *TransactionContext    `protobuf:"bytes,4,opt,name=transaction,proto3" json:"transaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DistinctRequest) Reset() {
	*x = DistinctRequest{}
	mi := &file_db_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DistinctRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistinctRequest) ProtoMessage() {}

func (x *DistinctRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistinctRequest.ProtoReflect.Descriptor instead.
func (*DistinctRequest) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{42}
}

func (x *DistinctRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *DistinctRequest) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *DistinctRequest) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *DistinctRequest) GetTransaction() *TransactionContext {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type DistinctResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []*structpb.Value      `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DistinctResponse) Reset() {
	*x = DistinctResponse{}
	mi := &file_db_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DistinctResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistinctResponse) ProtoMessage() {}

func (x *DistinctResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistinctResponse.ProtoReflect.Descriptor instead.
func (*DistinctResponse) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{43}
}

func (x *DistinctResponse) GetValues() []*structpb.Value {
	if x != nil {
		return x.Values
	}
	return nil
}

// Index management requests/responses
type CreateIndexRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collection    string                 `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Index         *IndexSpec             `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateIndexRequest) Reset() {
	*x = CreateIndexRequest{}
	mi := &file_db_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIndexRequest) ProtoMessage() {}

func (x *CreateIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIndexRequest.ProtoReflect.Descriptor instead.
func (*CreateIndexRequest) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{44}
}

func (x *CreateIndexRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *CreateIndexRequest) GetIndex() *IndexSpec {
	if x != nil {
		return x.Index
	}
	return nil
}

type CreateIndexResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateIndexResponse) Reset() {
	*x = CreateIndexResponse{}
	mi := &file_db_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIndexResponse) ProtoMessage() {}

func (x *CreateIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIndexResponse.ProtoReflect.Descriptor instead.
func (*CreateIndexResponse) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{45}
}

func (x *CreateIndexResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateIndexResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DropIndexRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collection    string                 `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	IndexName     string                 `protobuf:"bytes,2,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropIndexRequest) Reset() {
	*x = DropIndexRequest{}
	mi := &file_db_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropIndexRequest) ProtoMessage() {}

func (x *DropIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropIndexRequest.ProtoReflect.Descriptor instead.
func (*DropIndexRequest) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{46}
}

func (x *DropIndexRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *DropIndexRequest) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

type DropIndexResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropIndexResponse) Reset() {
	*x = DropIndexResponse{}
	mi := &file_db_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropIndexResponse) ProtoMessage() {}

func (x *DropIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropIndexResponse.ProtoReflect.Descriptor instead.
func (*DropIndexResponse) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{47}
}

func (x *DropIndexResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DropIndexResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListIndexesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collection    string                 `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListIndexesRequest) Reset() {
	*x = ListIndexesRequest{}
	mi := &file_db_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListIndexesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIndexesRequest) ProtoMessage() {}

func (x *ListIndexesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIndexesRequest.ProtoReflect.Descriptor instead.
func (*ListIndexesRequest) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{48}
}

func (x *ListIndexesRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

type ListIndexesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Indexes       []*IndexSpec           `protobuf:"bytes,1,rep,name=indexes,proto3" json:"indexes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListIndexesResponse) Reset() {
	*x = ListIndexesResponse{}
	mi := &file_db_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListIndexesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIndexesResponse) ProtoMessage() {}

func (x *ListIndexesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIndexesResponse.ProtoReflect.Descriptor instead.
func (*ListIndexesResponse) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{49}
}

func (x *ListIndexesResponse) GetIndexes() []*IndexSpec {
	if x != nil {
		return x.Indexes
	}
	return nil
}

// Bulk operations
type BulkWriteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collection    string                 `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Operations    []*BulkOperation       `protobuf:"bytes,2,rep,name=operations,proto3" json:"operations,omitempty"`
	Ordered       bool                   `protobuf:"varint,3,opt,name=ordered,proto3" json:"ordered,omitempty"`
	Transaction   *TransactionContext    `protobuf:"bytes,4,opt,name=transaction,proto3" json:"transaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BulkWriteRequest) Reset() {
	*x = BulkWriteRequest{}
	mi := &file_db_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkWriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkWriteRequest) ProtoMessage() {}

func (x *BulkWriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkWriteRequest.ProtoReflect.Descriptor instead.
func (*BulkWriteRequest) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{50}
}

func (x *BulkWriteRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *BulkWriteRequest) GetOperations() []*BulkOperation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *BulkWriteRequest) GetOrdered() bool {
	if x != nil {
		return x.Ordered
	}
	return false
}

func (x *BulkWriteRequest) GetTransaction() *TransactionContext {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type BulkWriteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *WriteResult           `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Errors        []string               `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"` // Error messages for failed operations
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BulkWriteResponse) Reset() {
	*x = BulkWriteResponse{}
	mi := &file_db_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkWriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkWriteResponse) ProtoMessage() {}

func (x *BulkWriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkWriteResponse.ProtoReflect.Descriptor instead.
func (*BulkWriteResponse) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{51}
}

func (x *BulkWriteResponse) GetResult() *WriteResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *BulkWriteResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

// Transaction requests/responses
type BeginTransactionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TimeoutSeconds int32                  `protobuf:"varint,1,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"` // Transaction timeout (default: 60s)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BeginTransactionRequest) Reset() {
	*x = BeginTransactionRequest{}
	mi := &file_db_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BeginTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginTransactionRequest) ProtoMessage() {}

func (x *BeginTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginTransactionRequest.ProtoReflect.Descriptor instead.
func (*BeginTransactionRequest) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{52}
}

func (x *BeginTransactionRequest) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

type BeginTransactionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transaction   *TransactionContext    `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BeginTransactionResponse) Reset() {
	*x = BeginTransactionResponse{}
	mi := &file_db_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BeginTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginTransactionResponse) ProtoMessage() {}

func (x *BeginTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginTransactionResponse.ProtoReflect.Descriptor instead.
func (*BeginTransactionResponse) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{53}
}

func (x *BeginTransactionResponse) GetTransaction() *TransactionContext {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type CommitTransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitTransactionRequest) Reset() {
	*x = CommitTransactionRequest{}
	mi := &file_db_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitTransactionRequest) ProtoMessage() {}

func (x *CommitTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitTransactionRequest.ProtoReflect.Descriptor instead.
func (*CommitTransactionRequest) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{54}
}

func (x *CommitTransactionRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type CommitTransactionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitTransactionResponse) Reset() {
	*x = CommitTransactionResponse{}
	mi := &file_db_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitTransactionResponse) ProtoMessage() {}

func (x *CommitTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitTransactionResponse.ProtoReflect.Descriptor instead.
func (*CommitTransactionResponse) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{55}
}

func (x *CommitTransactionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CommitTransactionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AbortTransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AbortTransactionRequest) Reset() {
	*x = AbortTransactionRequest{}
	mi := &file_db_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbortTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbortTransactionRequest) ProtoMessage() {}

func (x *AbortTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbortTransactionRequest.ProtoReflect.Descriptor instead.
func (*AbortTransactionRequest) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{56}
}

func (x *AbortTransactionRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type AbortTransactionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AbortTransactionResponse) Reset() {
	*x = AbortTransactionResponse{}
	mi := &file_db_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbortTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbortTransactionResponse) ProtoMessage() {}

func (x *AbortTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbortTransactionResponse.ProtoReflect.Descriptor instead.
func (*AbortTransactionResponse) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{57}
}

func (x *AbortTransactionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AbortTransactionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_db_proto protoreflect.FileDescriptor

const file_db_proto_rawDesc = "" +
	"\n" +
	"\bdb.proto\x12\bdocument\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xd7\x01\n" +
	"\bDocument\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12+\n" +
	"\x04data\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x04data\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x18\n" +
	"\aversion\x18\x05 \x01(\x03R\aversion\"\xc8\x01\n" +
	"\x05Query\x12/\n" +
	"\x06filter\x18\x01 \x01(\v2\x17.google.protobuf.StructR\x06filter\x12+\n" +
	"\x04sort\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x04sort\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x12\n" +
	"\x04skip\x18\x04 \x01(\x05R\x04skip\x127\n" +
	"\n" +
	"projection\x18\x05 \x01(\v2\x17.google.protobuf.StructR\n" +
	"projection\"\x9e\x02\n" +
	"\x06Update\x12)\n" +
	"\x03set\x18\x01 \x01(\v2\x17.google.protobuf.StructR\x03set\x12-\n" +
	"\x05unset\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x05unset\x12)\n" +
	"\x03inc\x18\x03 \x01(\v2\x17.google.protobuf.StructR\x03inc\x12+\n" +
	"\x04push\x18\x04 \x01(\v2\x17.google.protobuf.StructR\x04push\x12+\n" +
	"\x04pull\x18\x05 \x01(\v2\x17.google.protobuf.StructR\x04pull\x125\n" +
	"\n" +
	"add_to_set\x18\x06 \x01(\v2\x17.google.protobuf.StructR\baddToSet\"\xdd\x01\n" +
	"\tIndexSpec\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12+\n" +
	"\x04keys\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x04keys\x12\x16\n" +
	"\x06unique\x18\x03 \x01(\bR\x06unique\x12\x16\n" +
	"\x06sparse\x18\x04 \x01(\bR\x06sparse\x12\x1f\n" +
	"\vttl_seconds\x18\x05 \x01(\x05R\n" +
	"ttlSeconds\x12>\n" +
	"\x0epartial_filter\x18\x06 \x01(\v2\x17.google.protobuf.StructR\rpartialFilter\"\x8b\x02\n" +
	"\x0eCollectionInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12%\n" +
	"\x0edocument_count\x18\x02 \x01(\x03R\rdocumentCount\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x03 \x01(\x03R\tsizeBytes\x12-\n" +
	"\aindexes\x18\x04 \x03(\v2\x13.document.IndexSpecR\aindexes\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x125\n" +
	"\aoptions\x18\x06 \x01(\v2\x1b.document.CollectionOptionsR\aoptions\"\xa2\x01\n" +
	"\x11CollectionOptions\x12\x16\n" +
	"\x06capped\x18\x01 \x01(\bR\x06capped\x12\x19\n" +
	"\bmax_size\x18\x02 \x01(\x03R\amaxSize\x12#\n" +
	"\rmax_documents\x18\x03 \x01(\x03R\fmaxDocuments\x125\n" +
	"\tvalidator\x18\x04 \x01(\v2\x17.google.protobuf.StructR\tvalidator\"R\n" +
	"\rPipelineStage\x12\x14\n" +
	"\x05stage\x18\x01 \x01(\tR\x05stage\x12+\n" +
	"\x04spec\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x04spec\"\xd0\x03\n" +
	"\rBulkOperation\x12;\n" +
	"\n" +
	"insert_one\x18\x01 \x01(\v2\x1a.document.InsertOneRequestH\x00R\tinsertOne\x12;\n" +
	"\n" +
	"update_one\x18\x02 \x01(\v2\x1a.document.UpdateOneRequestH\x00R\tupdateOne\x12>\n" +
	"\vupdate_many\x18\x03 \x01(\v2\x1b.document.UpdateManyRequestH\x00R\n" +
	"updateMany\x12;\n" +
	"\n" +
	"delete_one\x18\x04 \x01(\v2\x1a.document.DeleteOneRequestH\x00R\tdeleteOne\x12>\n" +
	"\vdelete_many\x18\x05 \x01(\v2\x1b.document.DeleteManyRequestH\x00R\n" +
	"deleteMany\x12>\n" +
	"\vreplace_one\x18\x06 \x01(\v2\x1b.document.ReplaceOneRequestH\x00R\n" +
	"replaceOne\x12;\n" +
	"\n" +
	"upsert_one\x18\a \x01(\v2\x1a.document.UpsertOneRequestH\x00R\tupsertOneB\v\n" +
	"\toperation\"\x8f\x02\n" +
	"\vWriteResult\x12\"\n" +
	"\facknowledged\x18\x01 \x01(\bR\facknowledged\x12%\n" +
	"\x0einserted_count\x18\x02 \x01(\x03R\rinsertedCount\x12#\n" +
	"\rmatched_count\x18\x03 \x01(\x03R\fmatchedCount\x12%\n" +
	"\x0emodified_count\x18\x04 \x01(\x03R\rmodifiedCount\x12#\n" +
	"\rdeleted_count\x18\x05 \x01(\x03R\fdeletedCount\x12!\n" +
	"\finserted_ids\x18\x06 \x03(\tR\vinsertedIds\x12!\n" +
	"\fupserted_ids\x18\a \x03(\tR\vupsertedIds\"\x9f\x01\n" +
	"\x12TransactionContext\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x129\n" +
	"\n" +
	"started_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12'\n" +
	"\x0ftimeout_seconds\x18\x03 \x01(\x05R\x0etimeoutSeconds\"p\n" +
	"\x17CreateCollectionRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x125\n" +
	"\aoptions\x18\x02 \x01(\v2\x1b.document.CollectionOptionsR\aoptions\"N\n" +
	"\x18CreateCollectionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"7\n" +
	"\x15DropCollectionRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\"L\n" +
	"\x16DropCollectionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x18\n" +
	"\x16ListCollectionsRequest\";\n" +
	"\x17ListCollectionsResponse\x12 \n" +
	"\vcollections\x18\x01 \x03(\tR\vcollections\":\n" +
	"\x18GetCollectionInfoRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\"I\n" +
	"\x19GetCollectionInfoResponse\x12,\n" +
	"\x04info\x18\x01 \x01(\v2\x18.document.CollectionInfoR\x04info\"\xa7\x01\n" +
	"\x10InsertOneRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x123\n" +
	"\bdocument\x18\x02 \x01(\v2\x17.google.protobuf.StructR\bdocument\x12>\n" +
	"\vtransaction\x18\x03 \x01(\v2\x1c.document.TransactionContextR\vtransaction\"c\n" +
	"\x11InsertOneResponse\x12\x1f\n" +
	"\vinserted_id\x18\x01 \x01(\tR\n" +
	"insertedId\x12-\n" +
	"\x06result\x18\x02 \x01(\v2\x15.document.WriteResultR\x06result\"\xc4\x01\n" +
	"\x11InsertManyRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x125\n" +
	"\tdocuments\x18\x02 \x03(\v2\x17.google.protobuf.StructR\tdocuments\x12\x18\n" +
	"\aordered\x18\x03 \x01(\bR\aordered\x12>\n" +
	"\vtransaction\x18\x04 \x01(\v2\x1c.document.TransactionContextR\vtransaction\"f\n" +
	"\x12InsertManyResponse\x12!\n" +
	"\finserted_ids\x18\x01 \x03(\tR\vinsertedIds\x12-\n" +
	"\x06result\x18\x02 \x01(\v2\x15.document.WriteResultR\x06result\"\x97\x01\n" +
	"\x0eFindOneRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x12%\n" +
	"\x05query\x18\x02 \x01(\v2\x0f.document.QueryR\x05query\x12>\n" +
	"\vtransaction\x18\x03 \x01(\v2\x1c.document.TransactionContextR\vtransaction\"W\n" +
	"\x0fFindOneResponse\x12.\n" +
	"\bdocument\x18\x01 \x01(\v2\x12.document.DocumentR\bdocument\x12\x14\n" +
	"\x05found\x18\x02 \x01(\bR\x05found\"\x98\x01\n" +
	"\x0fFindManyRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x12%\n" +
	"\x05query\x18\x02 \x01(\v2\x0f.document.QueryR\x05query\x12>\n" +
	"\vtransaction\x18\x03 \x01(\v2\x1c.document.TransactionContextR\vtransaction\"e\n" +
	"\x10FindManyResponse\x120\n" +
	"\tdocuments\x18\x01 \x03(\v2\x12.document.DocumentR\tdocuments\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x03R\n" +
	"totalCount\"\xe5\x01\n" +
	"\x10UpdateOneRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x12/\n" +
	"\x06filter\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x06filter\x12(\n" +
	"\x06update\x18\x03 \x01(\v2\x10.document.UpdateR\x06update\x12\x16\n" +
	"\x06upsert\x18\x04 \x01(\bR\x06upsert\x12>\n" +
	"\vtransaction\x18\x05 \x01(\v2\x1c.document.TransactionContextR\vtransaction\"B\n" +
	"\x11UpdateOneResponse\x12-\n" +
	"\x06result\x18\x01 \x01(\v2\x15.document.WriteResultR\x06result\"\xce\x01\n" +
	"\x11UpdateManyRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x12/\n" +
	"\x06filter\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x06filter\x12(\n" +
	"\x06update\x18\x03 \x01(\v2\x10.document.UpdateR\x06update\x12>\n" +
	"\vtransaction\x18\x04 \x01(\v2\x1c.document.TransactionContextR\vtransaction\"C\n" +
	"\x12UpdateManyResponse\x12-\n" +
	"\x06result\x18\x01 \x01(\v2\x15.document.WriteResultR\x06result\"\xa3\x01\n" +
	"\x10DeleteOneRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x12/\n" +
	"\x06filter\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x06filter\x12>\n" +
	"\vtransaction\x18\x03 \x01(\v2\x1c.document.TransactionContextR\vtransaction\"B\n" +
	"\x11DeleteOneResponse\x12-\n" +
	"\x06result\x18\x01 \x01(\v2\x15.document.WriteResultR\x06result\"\xa4\x01\n" +
	"\x11DeleteManyRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x12/\n" +
	"\x06filter\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x06filter\x12>\n" +
	"\vtransaction\x18\x03 \x01(\v2\x1c.document.TransactionContextR\vtransaction\"C\n" +
	"\x12DeleteManyResponse\x12-\n" +
	"\x06result\x18\x01 \x01(\v2\x15.document.WriteResultR\x06result\"\xf7\x01\n" +
	"\x11ReplaceOneRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x12/\n" +
	"\x06filter\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x06filter\x129\n" +
	"\vreplacement\x18\x03 \x01(\v2\x17.google.protobuf.StructR\vreplacement\x12\x16\n" +
	"\x06upsert\x18\x04 \x01(\bR\x06upsert\x12>\n" +
	"\vtransaction\x18\x05 \x01(\v2\x1c.document.TransactionContextR\vtransaction\"C\n" +
	"\x12ReplaceOneResponse\x12-\n" +
	"\x06result\x18\x01 \x01(\v2\x15.document.WriteResultR\x06result\"\xd8\x01\n" +
	"\x10UpsertOneRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x12/\n" +
	"\x06filter\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x06filter\x123\n" +
	"\bdocument\x18\x03 \x01(\v2\x17.google.protobuf.StructR\bdocument\x12>\n" +
	"\vtransaction\x18\x04 \x01(\v2\x1c.document.TransactionContextR\vtransaction\"B\n" +
	"\x11UpsertOneResponse\x12-\n" +
	"\x06result\x18\x01 \x01(\v2\x15.document.WriteResultR\x06result\"\xa7\x01\n" +
	"\x10AggregateRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x123\n" +
	"\bpipeline\x18\x02 \x03(\v2\x17.document.PipelineStageR\bpipeline\x12>\n" +
	"\vtransaction\x18\x03 \x01(\v2\x1c.document.TransactionContextR\vtransaction\"F\n" +
	"\x11AggregateResponse\x121\n" +
	"\aresults\x18\x01 \x03(\v2\x17.google.protobuf.StructR\aresults\"\x9f\x01\n" +
	"\fCountRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x12/\n" +
	"\x06filter\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x06filter\x12>\n" +
	"\vtransaction\x18\x03 \x01(\v2\x1c.document.TransactionContextR\vtransaction\"%\n" +
	"\rCountResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x03R\x05count\"\xb8\x01\n" +
	"\x0fDistinctRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x12\x14\n" +
	"\x05field\x18\x02 \x01(\tR\x05field\x12/\n" +
	"\x06filter\x18\x03 \x01(\v2\x17.google.protobuf.StructR\x06filter\x12>\n" +
	"\vtransaction\x18\x04 \x01(\v2\x1c.document.TransactionContextR\vtransaction\"B\n" +
	"\x10DistinctResponse\x12.\n" +
	"\x06values\x18\x01 \x03(\v2\x16.google.protobuf.ValueR\x06values\"_\n" +
	"\x12CreateIndexRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x12)\n" +
	"\x05index\x18\x02 \x01(\v2\x13.document.IndexSpecR\x05index\"I\n" +
	"\x13CreateIndexResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"Q\n" +
	"\x10DropIndexRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x12\x1d\n" +
	"\n" +
	"index_name\x18\x02 \x01(\tR\tindexName\"G\n" +
	"\x11DropIndexResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"4\n" +
	"\x12ListIndexesRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\"D\n" +
	"\x13ListIndexesResponse\x12-\n" +
	"\aindexes\x18\x01 \x03(\v2\x13.document.IndexSpecR\aindexes\"\xc5\x01\n" +
	"\x10BulkWriteRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x127\n" +
	"\n" +
	"operations\x18\x02 \x03(\v2\x17.document.BulkOperationR\n" +
	"operations\x12\x18\n" +
	"\aordered\x18\x03 \x01(\bR\aordered\x12>\n" +
	"\vtransaction\x18\x04 \x01(\v2\x1c.document.TransactionContextR\vtransaction\"Z\n" +
	"\x11BulkWriteResponse\x12-\n" +
	"\x06result\x18\x01 \x01(\v2\x15.document.WriteResultR\x06result\x12\x16\n" +
	"\x06errors\x18\x02 \x03(\tR\x06errors\"B\n" +
	"\x17BeginTransactionRequest\x12'\n" +
	"\x0ftimeout_seconds\x18\x01 \x01(\x05R\x0etimeoutSeconds\"Z\n" +
	"\x18BeginTransactionResponse\x12>\n" +
	"\vtransaction\x18\x01 \x01(\v2\x1c.document.TransactionContextR\vtransaction\"A\n" +
	"\x18CommitTransactionRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\"O\n" +
	"\x19CommitTransactionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"@\n" +
	"\x17AbortTransactionRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\"N\n" +
	"\x18AbortTransactionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\xb1\x0e\n" +
	"\x0fDocumentService\x12Y\n" +
	"\x10CreateCollection\x12!.document.CreateCollectionRequest\x1a\".document.CreateCollectionResponse\x12S\n" +
	"\x0eDropCollection\x12\x1f.document.DropCollectionRequest\x1a .document.DropCollectionResponse\x12V\n" +
	"\x0fListCollections\x12 .document.ListCollectionsRequest\x1a!.document.ListCollectionsResponse\x12\\\n" +
	"\x11GetCollectionInfo\x12\".document.GetCollectionInfoRequest\x1a#.document.GetCollectionInfoResponse\x12D\n" +
	"\tInsertOne\x12\x1a.document.InsertOneRequest\x1a\x1b.document.InsertOneResponse\x12G\n" +
	"\n" +
	"InsertMany\x12\x1b.document.InsertManyRequest\x1a\x1c.document.InsertManyResponse\x12>\n" +
	"\aFindOne\x12\x18.document.FindOneRequest\x1a\x19.document.FindOneResponse\x12A\n" +
	"\bFindMany\x12\x19.document.FindManyRequest\x1a\x1a.document.FindManyResponse\x12D\n" +
	"\tUpdateOne\x12\x1a.document.UpdateOneRequest\x1a\x1b.document.UpdateOneResponse\x12G\n" +
	"\n" +
	"UpdateMany\x12\x1b.document.UpdateManyRequest\x1a\x1c.document.UpdateManyResponse\x12D\n" +
	"\tDeleteOne\x12\x1a.document.DeleteOneRequest\x1a\x1b.document.DeleteOneResponse\x12G\n" +
	"\n" +
	"DeleteMany\x12\x1b.document.DeleteManyRequest\x1a\x1c.document.DeleteManyResponse\x12G\n" +
	"\n" +
	"ReplaceOne\x12\x1b.document.ReplaceOneRequest\x1a\x1c.document.ReplaceOneResponse\x12D\n" +
	"\tUpsertOne\x12\x1a.document.UpsertOneRequest\x1a\x1b.document.UpsertOneResponse\x12D\n" +
	"\tAggregate\x12\x1a.document.AggregateRequest\x1a\x1b.document.AggregateResponse\x128\n" +
	"\x05Count\x12\x16.document.CountRequest\x1a\x17.document.CountResponse\x12A\n" +
	"\bDistinct\x12\x19.document.DistinctRequest\x1a\x1a.document.DistinctResponse\x12J\n" +
	"\vCreateIndex\x12\x1c.document.CreateIndexRequest\x1a\x1d.document.CreateIndexResponse\x12D\n" +
	"\tDropIndex\x12\x1a.document.DropIndexRequest\x1a\x1b.document.DropIndexResponse\x12J\n" +
	"\vListIndexes\x12\x1c.document.ListIndexesRequest\x1a\x1d.document.ListIndexesResponse\x12D\n" +
	"\tBulkWrite\x12\x1a.document.BulkWriteRequest\x1a\x1b.document.BulkWriteResponse\x12Y\n" +
	"\x10BeginTransaction\x12!.document.BeginTransactionRequest\x1a\".document.BeginTransactionResponse\x12\\\n" +
	"\x11CommitTransaction\x12\".document.CommitTransactionRequest\x1a#.document.CommitTransactionResponse\x12Y\n" +
	"\x10AbortTransaction\x12!.document.AbortTransactionRequest\x1a\".document.AbortTransactionResponseB6Z4github.com/skshohagmiah/gomsg/api/generated/documentb\x06proto3"

var (
	file_db_proto_rawDescOnce sync.Once
	file_db_proto_rawDescData []byte
)

func file_db_proto_rawDescGZIP() []byte {
	file_db_proto_rawDescOnce.Do(func() {
		file_db_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_db_proto_rawDesc), len(file_db_proto_rawDesc)))
	})
	return file_db_proto_rawDescData
}

var file_db_proto_msgTypes = make([]protoimpl.MessageInfo, 58)
var file_db_proto_goTypes = []any{
	(*Document)(nil),                  // 0: document.Document
	(*Query)(nil),                     // 1: document.Query
	(*Update)(nil),                    // 2: document.Update
	(*IndexSpec)(nil),                 // 3: document.IndexSpec
	(*CollectionInfo)(nil),            // 4: document.CollectionInfo
	(*CollectionOptions)(nil),         // 5: document.CollectionOptions
	(*PipelineStage)(nil),             // 6: document.PipelineStage
	(*BulkOperation)(nil),             // 7: document.BulkOperation
	(*WriteResult)(nil),               // 8: document.WriteResult
	(*TransactionContext)(nil),        // 9: document.TransactionContext
	(*CreateCollectionRequest)(nil),   // 10: document.CreateCollectionRequest
	(*CreateCollectionResponse)(nil),  // 11: document.CreateCollectionResponse
	(*DropCollectionRequest)(nil),     // 12: document.DropCollectionRequest
	(*DropCollectionResponse)(nil),    // 13: document.DropCollectionResponse
	(*ListCollectionsRequest)(nil),    // 14: document.ListCollectionsRequest
	(*ListCollectionsResponse)(nil),   // 15: document.ListCollectionsResponse
	(*GetCollectionInfoRequest)(nil),  // 16: document.GetCollectionInfoRequest
	(*GetCollectionInfoResponse)(nil), // 17: document.GetCollectionInfoResponse
	(*InsertOneRequest)(nil),          // 18: document.InsertOneRequest
	(*InsertOneResponse)(nil),         // 19: document.InsertOneResponse
	(*InsertManyRequest)(nil),         // 20: document.InsertManyRequest
	(*InsertManyResponse)(nil),        // 21: document.InsertManyResponse
	(*FindOneRequest)(nil),            // 22: document.FindOneRequest
	(*FindOneResponse)(nil),           // 23: document.FindOneResponse
	(*FindManyRequest)(nil),           // 24: document.FindManyRequest
	(*FindManyResponse)(nil),          // 25: document.FindManyResponse
	(*UpdateOneRequest)(nil),          // 26: document.UpdateOneRequest
	(*UpdateOneResponse)(nil),         // 27: document.UpdateOneResponse
	(*UpdateManyRequest)(nil),         // 28: document.UpdateManyRequest
	(*UpdateManyResponse)(nil),        // 29: document.UpdateManyResponse
	(*DeleteOneRequest)(nil),          // 30: document.DeleteOneRequest
	(*DeleteOneResponse)(nil),         // 31: document.DeleteOneResponse
	(*DeleteManyRequest)(nil),         // 32: document.DeleteManyRequest
	(*DeleteManyResponse)(nil),        // 33: document.DeleteManyResponse
	(*ReplaceOneRequest)(nil),         // 34: document.ReplaceOneRequest
	(*ReplaceOneResponse)(nil),        // 35: document.ReplaceOneResponse
	(*UpsertOneRequest)(nil),          // 36: document.UpsertOneRequest
	(*UpsertOneResponse)(nil),         // 37: document.UpsertOneResponse
	(*AggregateRequest)(nil),          // 38: document.AggregateRequest
	(*AggregateResponse)(nil),         // 39: document.AggregateResponse
	(*CountRequest)(nil),              // 40: document.CountRequest
	(*CountResponse)(nil),             // 41: document.CountResponse
	(*DistinctRequest)(nil),           // 42: document.DistinctRequest
	(*DistinctResponse)(nil),          // 43: document.DistinctResponse
	(*CreateIndexRequest)(nil),        // 44: document.CreateIndexRequest
	(*CreateIndexResponse)(nil),       // 45: document.CreateIndexResponse
	(*DropIndexRequest)(nil),          // 46: document.DropIndexRequest
	(*DropIndexResponse)(nil),         // 47: document.DropIndexResponse
	(*ListIndexesRequest)(nil),        // 48: document.ListIndexesRequest
	(*ListIndexesResponse)(nil),       // 49: document.ListIndexesResponse
	(*BulkWriteRequest)(nil),          // 50: document.BulkWriteRequest
	(*BulkWriteResponse)(nil),         // 51: document.BulkWriteResponse
	(*BeginTransactionRequest)(nil),   // 52: document.BeginTransactionRequest
	(*BeginTransactionResponse)(nil),  // 53: document.BeginTransactionResponse
	(*CommitTransactionRequest)(nil),  // 54: document.CommitTransactionRequest
	(*CommitTransactionResponse)(nil), // 55: document.CommitTransactionResponse
	(*AbortTransactionRequest)(nil),   // 56: document.AbortTransactionRequest
	(*AbortTransactionResponse)(nil),  // 57: document.AbortTransactionResponse
	(*structpb.Struct)(nil),           // 58: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil),     // 59: google.protobuf.Timestamp
	(*structpb.Value)(nil),            // 60: google.protobuf.Value
}
var file_db_proto_depIdxs = []int32{
	58,  // 0: document.Document.data:type_name -> google.protobuf.Struct
	59,  // 1: document.Document.created_at:type_name -> google.protobuf.Timestamp
	59,  // 2: document.Document.updated_at:type_name -> google.protobuf.Timestamp
	58,  // 3: document.Query.filter:type_name -> google.protobuf.Struct
	58,  // 4: document.Query.sort:type_name -> google.protobuf.Struct
	58,  // 5: document.Query.projection:type_name -> google.protobuf.Struct
	58,  // 6: document.Update.set:type_name -> google.protobuf.Struct
	58,  // 7: document.Update.unset:type_name -> google.protobuf.Struct
	58,  // 8: document.Update.inc:type_name -> google.protobuf.Struct
	58,  // 9: document.Update.push:type_name -> google.protobuf.Struct
	58,  // 10: document.Update.pull:type_name -> google.protobuf.Struct
	58,  // 11: document.Update.add_to_set:type_name -> google.protobuf.Struct
	58,  // 12: document.IndexSpec.keys:type_name -> google.protobuf.Struct
	58,  // 13: document.IndexSpec.partial_filter:type_name -> google.protobuf.Struct
	3,   // 14: document.CollectionInfo.indexes:type_name -> document.IndexSpec
	59,  // 15: document.CollectionInfo.created_at:type_name -> google.protobuf.Timestamp
	5,   // 16: document.CollectionInfo.options:type_name -> document.CollectionOptions
	58,  // 17: document.CollectionOptions.validator:type_name -> google.protobuf.Struct
	58,  // 18: document.PipelineStage.spec:type_name -> google.protobuf.Struct
	18,  // 19: document.BulkOperation.insert_one:type_name -> document.InsertOneRequest
	26,  // 20: document.BulkOperation.update_one:type_name -> document.UpdateOneRequest
	28,  // 21: document.BulkOperation.update_many:type_name -> document.UpdateManyRequest
	30,  // 22: document.BulkOperation.delete_one:type_name -> document.DeleteOneRequest
	32,  // 23: document.BulkOperation.delete_many:type_name -> document.DeleteManyRequest
	34,  // 24: document.BulkOperation.replace_one:type_name -> document.ReplaceOneRequest
	36,  // 25: document.BulkOperation.upsert_one:type_name -> document.UpsertOneRequest
	59,  // 26: document.TransactionContext.started_at:type_name -> google.protobuf.Timestamp
	5,   // 27: document.CreateCollectionRequest.options:type_name -> document.CollectionOptions
	4,   // 28: document.GetCollectionInfoResponse.info:type_name -> document.CollectionInfo
	58,  // 29: document.InsertOneRequest.document:type_name -> google.protobuf.Struct
	9,   // 30: document.InsertOneRequest.transaction:type_name -> document.TransactionContext
	8,   // 31: document.InsertOneResponse.result:type_name -> document.WriteResult
	58,  // 32: document.InsertManyRequest.documents:type_name -> google.protobuf.Struct
	9,   // 33: document.InsertManyRequest.transaction:type_name -> document.TransactionContext
	8,   // 34: document.InsertManyResponse.result:type_name -> document.WriteResult
	1,   // 35: document.FindOneRequest.query:type_name -> document.Query
	9,   // 36: document.FindOneRequest.transaction:type_name -> document.TransactionContext
	0,   // 37: document.FindOneResponse.document:type_name -> document.Document
	1,   // 38: document.FindManyRequest.query:type_name -> document.Query
	9,   // 39: document.FindManyRequest.transaction:type_name -> document.TransactionContext
	0,   // 40: document.FindManyResponse.documents:type_name -> document.Document
	58,  // 41: document.UpdateOneRequest.filter:type_name -> google.protobuf.Struct
	2,   // 42: document.UpdateOneRequest.update:type_name -> document.Update
	9,   // 43: document.UpdateOneRequest.transaction:type_name -> document.TransactionContext
	8,   // 44: document.UpdateOneResponse.result:type_name -> document.WriteResult
	58,  // 45: document.UpdateManyRequest.filter:type_name -> google.protobuf.Struct
	2,   // 46: document.UpdateManyRequest.update:type_name -> document.Update
	9,   // 47: document.UpdateManyRequest.transaction:type_name -> document.TransactionContext
	8,   // 48: document.UpdateManyResponse.result:type_name -> document.WriteResult
	58,  // 49: document.DeleteOneRequest.filter:type_name -> google.protobuf.Struct
	9,   // 50: document.DeleteOneRequest.transaction:type_name -> document.TransactionContext
	8,   // 51: document.DeleteOneResponse.result:type_name -> document.WriteResult
	58,  // 52: document.DeleteManyRequest.filter:type_name -> google.protobuf.Struct
	9,   // 53: document.DeleteManyRequest.transaction:type_name -> document.TransactionContext
	8,   // 54: document.DeleteManyResponse.result:type_name -> document.WriteResult
	58,  // 55: document.ReplaceOneRequest.filter:type_name -> google.protobuf.Struct
	58,  // 56: document.ReplaceOneRequest.replacement:type_name -> google.protobuf.Struct
	9,   // 57: document.ReplaceOneRequest.transaction:type_name -> document.TransactionContext
	8,   // 58: document.ReplaceOneResponse.result:type_name -> document.WriteResult
	58,  // 59: document.UpsertOneRequest.filter:type_name -> google.protobuf.Struct
	58,  // 60: document.UpsertOneRequest.document:type_name -> google.protobuf.Struct
	9,   // 61: document.UpsertOneRequest.transaction:type_name -> document.TransactionContext
	8,   // 62: document.UpsertOneResponse.result:type_name -> document.WriteResult
	6,   // 63: document.AggregateRequest.pipeline:type_name -> document.PipelineStage
	9,   // 64: document.AggregateRequest.transaction:type_name -> document.TransactionContext
	58,  // 65: document.AggregateResponse.results:type_name -> google.protobuf.Struct
	58,  // 66: document.CountRequest.filter:type_name -> google.protobuf.Struct
	9,   // 67: document.CountRequest.transaction:type_name -> document.TransactionContext
	58,  // 68: document.DistinctRequest.filter:type_name -> google.protobuf.Struct
	9,   // 69: document.DistinctRequest.transaction:type_name -> document.TransactionContext
	60,  // 70: document.DistinctResponse.values:type_name -> google.protobuf.Value
	3,   // 71: document.CreateIndexRequest.index:type_name -> document.IndexSpec
	3,   // 72: document.ListIndexesResponse.indexes:type_name -> document.IndexSpec
	7,   // 73: document.BulkWriteRequest.operations:type_name -> document.BulkOperation
	9,   // 74: document.BulkWriteRequest.transaction:type_name -> document.TransactionContext
	8,   // 75: document.BulkWriteResponse.result:type_name -> document.WriteResult
	9,   // 76: document.BeginTransactionResponse.transaction:type_name -> document.TransactionContext
	10,  // 77: document.DocumentService.CreateCollection:input_type -> document.CreateCollectionRequest
	12,  // 78: document.DocumentService.DropCollection:input_type -> document.DropCollectionRequest
	14,  // 79: document.DocumentService.ListCollections:input_type -> document.ListCollectionsRequest
	16,  // 80: document.DocumentService.GetCollectionInfo:input_type -> document.GetCollectionInfoRequest
	18,  // 81: document.DocumentService.InsertOne:input_type -> document.InsertOneRequest
	20,  // 82: document.DocumentService.InsertMany:input_type -> document.InsertManyRequest
	22,  // 83: document.DocumentService.FindOne:input_type -> document.FindOneRequest
	24,  // 84: document.DocumentService.FindMany:input_type -> document.FindManyRequest
	26,  // 85: document.DocumentService.UpdateOne:input_type -> document.UpdateOneRequest
	28,  // 86: document.DocumentService.UpdateMany:input_type -> document.UpdateManyRequest
	30,  // 87: document.DocumentService.DeleteOne:input_type -> document.DeleteOneRequest
	32,  // 88: document.DocumentService.DeleteMany:input_type -> document.DeleteManyRequest
	34,  // 89: document.DocumentService.ReplaceOne:input_type -> document.ReplaceOneRequest
	36,  // 90: document.DocumentService.UpsertOne:input_type -> document.UpsertOneRequest
	38,  // 91: document.DocumentService.Aggregate:input_type -> document.AggregateRequest
	40,  // 92: document.DocumentService.Count:input_type -> document.CountRequest
	42,  // 93: document.DocumentService.Distinct:input_type -> document.DistinctRequest
	44,  // 94: document.DocumentService.CreateIndex:input_type -> document.CreateIndexRequest
	46,  // 95: document.DocumentService.DropIndex:input_type -> document.DropIndexRequest
	48,  // 96: document.DocumentService.ListIndexes:input_type -> document.ListIndexesRequest
	50,  // 97: document.DocumentService.BulkWrite:input_type -> document.BulkWriteRequest
	52,  // 98: document.DocumentService.BeginTransaction:input_type -> document.BeginTransactionRequest
	54,  // 99: document.DocumentService.CommitTransaction:input_type -> document.CommitTransactionRequest
	56,  // 100: document.DocumentService.AbortTransaction:input_type -> document.AbortTransactionRequest
	11,  // 101: document.DocumentService.CreateCollection:output_type -> document.CreateCollectionResponse
	13,  // 102: document.DocumentService.DropCollection:output_type -> document.DropCollectionResponse
	15,  // 103: document.DocumentService.ListCollections:output_type -> document.ListCollectionsResponse
	17,  // 104: document.DocumentService.GetCollectionInfo:output_type -> document.GetCollectionInfoResponse
	19,  // 105: document.DocumentService.InsertOne:output_type -> document.InsertOneResponse
	21,  // 106: document.DocumentService.InsertMany:output_type -> document.InsertManyResponse
	23,  // 107: document.DocumentService.FindOne:output_type -> document.FindOneResponse
	25,  // 108: document.DocumentService.FindMany:output_type -> document.FindManyResponse
	27,  // 109: document.DocumentService.UpdateOne:output_type -> document.UpdateOneResponse
	29,  // 110: document.DocumentService.UpdateMany:output_type -> document.UpdateManyResponse
	31,  // 111: document.DocumentService.DeleteOne:output_type -> document.DeleteOneResponse
	33,  // 112: document.DocumentService.DeleteMany:output_type -> document.DeleteManyResponse
	35,  // 113: document.DocumentService.ReplaceOne:output_type -> document.ReplaceOneResponse
	37,  // 114: document.DocumentService.UpsertOne:output_type -> document.UpsertOneResponse
	39,  // 115: document.DocumentService.Aggregate:output_type -> document.AggregateResponse
	41,  // 116: document.DocumentService.Count:output_type -> document.CountResponse
	43,  // 117: document.DocumentService.Distinct:output_type -> document.DistinctResponse
	45,  // 118: document.DocumentService.CreateIndex:output_type -> document.CreateIndexResponse
	47,  // 119: document.DocumentService.DropIndex:output_type -> document.DropIndexResponse
	49,  // 120: document.DocumentService.ListIndexes:output_type -> document.ListIndexesResponse
	51,  // 121: document.DocumentService.BulkWrite:output_type -> document.BulkWriteResponse
	53,  // 122: document.DocumentService.BeginTransaction:output_type -> document.BeginTransactionResponse
	55,  // 123: document.DocumentService.CommitTransaction:output_type -> document.CommitTransactionResponse
	57,  // 124: document.DocumentService.AbortTransaction:output_type -> document.AbortTransactionResponse
	101, // [101:125] is the sub-list for method output_type
	77,  // [77:101] is the sub-list for method input_type
	77,  // [77:77] is the sub-list for extension type_name
	77,  // [77:77] is the sub-list for extension extendee
	0,   // [0:77] is the sub-list for field type_name
}

func init() { file_db_proto_init() }
func file_db_proto_init() {
	if File_db_proto != nil {
		return
	}
	file_db_proto_msgTypes[7].OneofWrappers = []any{
		(*BulkOperation_InsertOne)(nil),
		(*BulkOperation_UpdateOne)(nil),
		(*BulkOperation_UpdateMany)(nil),
		(*BulkOperation_DeleteOne)(nil),
		(*BulkOperation_DeleteMany)(nil),
		(*BulkOperation_ReplaceOne)(nil),
		(*BulkOperation_UpsertOne)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_db_proto_rawDesc), len(file_db_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   58,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_db_proto_goTypes,
		DependencyIndexes: file_db_proto_depIdxs,
		MessageInfos:      file_db_proto_msgTypes,
	}.Build()
	File_db_proto = out.File
	file_db_proto_goTypes = nil
	file_db_proto_depIdxs = nil
}
